[TRACE] Using prover: /home/alexander/sharedData/uni/hice-dt/Boogie/Binaries/z3.exe
Parsing /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Coalescing blocks...
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 16
#parameters: 64
#parameters: 64
#parameters: 64
Generating VC of pre_condition
Generating VC of post_condition
Generating VC of t1_transition_s1
Generating VC of t1_transition_s2
Generating VC of t1_transition_s3
Generating VC of t1_transition_s4
Generating VC of t2_transition_s1
Generating VC of t2_transition_s2
Generating VC of t3_transition_s1
Generating VC of t3_transition_s2
Generating VC of t3_transition_s3
Generating VC of t3_transition_s4
Generating VC of t3_transition_s5
Generating VC of P0_Stable_R_t1
Generating VC of P1_Stable_R_t1
Generating VC of P2_Stable_R_t1
Generating VC of P3_Stable_R_t1
Generating VC of P4_Stable_R_t1
Generating VC of Q0_Stable_R_t2
Generating VC of Q1_Stable_R_t2
Generating VC of Q2_Stable_R_t2
Generating VC of Q3_Stable_R_t2
Generating VC of R0_Stable_R_t3
Generating VC of R1_Stable_R_t3
Generating VC of R2_Stable_R_t3
Generating VC of R3_Stable_R_t3
Generating VC of R4_Stable_R_t3
Generating VC of R5_Stable_R_t3
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  true
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  true
}
Prover Time taken = 0.011283
Prover Time taken = 0.000779
Prover Time taken = 0.000767
Prover Time taken = 0.000664
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  true
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  true
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  true
}
Added Horn clause: 0 && 1 && 2 => 
Prover Time taken = 0.09934
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0243040
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.034636
Prover Time taken = 0.032103
Prover Time taken = 0.02655
Prover Time taken = 0.02639
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.012998
Prover Time taken = 0.012404
Prover Time taken = 0.013027
Prover Time taken = 0.016174
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.045722
Prover Time taken = 0.038279
Prover Time taken = 0.034897
Prover Time taken = 0.031873
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.028648
Prover Time taken = 0.030375
Prover Time taken = 0.032358
Prover Time taken = 0.028397
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.032595
Prover Time taken = 0.027813
Prover Time taken = 0.026178
Prover Time taken = 0.027398
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.017336
Prover Time taken = 0.017332
Prover Time taken = 0.014144
Prover Time taken = 0.014215
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.01177
Prover Time taken = 0.012725
Prover Time taken = 0.01194
Prover Time taken = 0.011888
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.00833
Prover Time taken = 0.008094
Prover Time taken = 0.007992
Prover Time taken = 0.008053
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.036284
Prover Time taken = 0.031293
Prover Time taken = 0.028045
Prover Time taken = 0.02555
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.031617
Prover Time taken = 0.030417
Prover Time taken = 0.028513
Prover Time taken = 0.027311
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.049483
Prover Time taken = 0.041876
Prover Time taken = 0.039656
Prover Time taken = 0.042259
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.024667
Prover Time taken = 0.030219
Prover Time taken = 0.024596
Prover Time taken = 0.025017
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.011637
Prover Time taken = 0.01147
Prover Time taken = 0.01689
Prover Time taken = 0.014087
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.041401
Prover Time taken = 0.041584
Prover Time taken = 0.042242
Prover Time taken = 0.040119
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.029573
Prover Time taken = 0.024775
Prover Time taken = 0.025662
Prover Time taken = 0.026098
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.031342
Prover Time taken = 0.025286
Prover Time taken = 0.026692
Prover Time taken = 0.026488
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.024887
Prover Time taken = 0.033474
Prover Time taken = 0.025898
Prover Time taken = 0.028218
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.017262
Prover Time taken = 0.013825
Prover Time taken = 0.012743
Prover Time taken = 0.014055
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.013199
Prover Time taken = 0.01478
Prover Time taken = 0.012276
Prover Time taken = 0.012947
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.052526
Prover Time taken = 0.043771
Prover Time taken = 0.041996
Prover Time taken = 0.043917
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.04289
Prover Time taken = 0.04267
Prover Time taken = 0.041836
Prover Time taken = 0.042633
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.025482
Prover Time taken = 0.024358
Prover Time taken = 0.024154
Prover Time taken = 0.024841
Verifying R4_Stable_R_t3: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.028713
Prover Time taken = 0.024403
Prover Time taken = 0.025749
Prover Time taken = 0.026333
Verifying R3_Stable_R_t3: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.028741
Prover Time taken = 0.024411
Prover Time taken = 0.025968
Prover Time taken = 0.02719
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.040969
Prover Time taken = 0.042351
Prover Time taken = 0.041989
Prover Time taken = 0.042754
Verifying R2_Stable_R_t3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.029869
Prover Time taken = 0.03102
Prover Time taken = 0.028433
Prover Time taken = 0.027207
Verifying R1_Stable_R_t3: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.029625
Prover Time taken = 0.026037
Prover Time taken = 0.027595
Prover Time taken = 0.024896
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Added: P0:0,0,0,0: positive
Prover Time taken = 0.014878
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0303440
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.019165
Added Horn clause: 3 => 4
Added Horn clause: 3 => 5
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0286690
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.010348
Prover Time taken = 0.009553
Prover Time taken = 0.00962
Prover Time taken = 0.009429
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.025209
Prover Time taken = 0.021954
Prover Time taken = 0.022006
Prover Time taken = 0.023414
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008886
Prover Time taken = 0.007377
Prover Time taken = 0.007716
Prover Time taken = 0.007391
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.01316
Added Horn clause: 4 => 6
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0329370
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.016553
Prover Time taken = 0.011033
Prover Time taken = 0.010876
Prover Time taken = 0.010823
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006852
Prover Time taken = 0.01127
Prover Time taken = 0.008742
Prover Time taken = 0.009514
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.022945
Prover Time taken = 0.021824
Prover Time taken = 0.030372
Prover Time taken = 0.021214
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.048703
Added Horn clause: 6 => 7
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0326390
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007657
Prover Time taken = 0.007378
Prover Time taken = 0.007438
Prover Time taken = 0.007549
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007391
Added Horn clause: 7 => 8
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0243200
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.012433
Added Horn clause: 8 => 9
Added Horn clause: 8 => 10
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0246940
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.009483
Prover Time taken = 0.009221
Prover Time taken = 0.012632
Prover Time taken = 0.009381
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.020807
Prover Time taken = 0.021871
Prover Time taken = 0.022992
Prover Time taken = 0.020481
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006032
Prover Time taken = 0.005927
Prover Time taken = 0.005782
Prover Time taken = 0.006059
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.010196
Added Horn clause: 9 => 11
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0284660
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006424
Prover Time taken = 0.006303
Prover Time taken = 0.007677
Prover Time taken = 0.006539
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005021
Prover Time taken = 0.005121
Prover Time taken = 0.005602
Prover Time taken = 0.005113
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.0245
Prover Time taken = 0.020365
Prover Time taken = 0.020356
Prover Time taken = 0.022828
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.021741
Prover Time taken = 0.022058
Prover Time taken = 0.024133
Prover Time taken = 0.022856
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.041319
Added Horn clause: 11 => 12
Added Horn clause: 6 => 13
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0257380
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.024901
Prover Time taken = 0.017408
Prover Time taken = 0.017279
Prover Time taken = 0.019254
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.021144
Prover Time taken = 0.018018
Prover Time taken = 0.018779
Prover Time taken = 0.017487
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.010465
Prover Time taken = 0.00911
Prover Time taken = 0.00775
Prover Time taken = 0.006559
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008411
Added Horn clause: 12 => 14
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0267650
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.009425
Added Horn clause: 14 => 15
Added Horn clause: 14 => 16
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0259930
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.009516
Prover Time taken = 0.021272
Prover Time taken = 0.011576
Prover Time taken = 0.009023
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.022516
Prover Time taken = 0.020855
Prover Time taken = 0.022491
Prover Time taken = 0.020277
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.0061
Prover Time taken = 0.005561
Prover Time taken = 0.005903
Prover Time taken = 0.007413
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00749
Prover Time taken = 0.008021
Prover Time taken = 0.007715
Prover Time taken = 0.007495
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005052
Prover Time taken = 0.004932
Prover Time taken = 0.004481
Prover Time taken = 0.004582
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.027265
Prover Time taken = 0.023297
Prover Time taken = 0.022665
Prover Time taken = 0.022427
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.022421
Prover Time taken = 0.021835
Prover Time taken = 0.027425
Prover Time taken = 0.022247
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.044432
Added Horn clause: 11 => 17
Added Horn clause: 6 => 18
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0241370
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016382
Prover Time taken = 0.016823
Prover Time taken = 0.016791
Prover Time taken = 0.017015
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.020376
Prover Time taken = 0.017633
Prover Time taken = 0.0172
Prover Time taken = 0.018032
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017363
Prover Time taken = 0.018102
Prover Time taken = 0.01587
Prover Time taken = 0.01575
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.026999
Added Horn clause: 11 => 19
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0228590
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017866
Prover Time taken = 0.019399
Prover Time taken = 0.016108
Prover Time taken = 0.015976
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.020339
Prover Time taken = 0.022882
Prover Time taken = 0.020057
Prover Time taken = 0.024439
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.024532
Prover Time taken = 0.018507
Prover Time taken = 0.018174
Prover Time taken = 0.018312
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.030803
Prover Time taken = 0.031802
Prover Time taken = 0.031069
Prover Time taken = 0.030425
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.027
Prover Time taken = 0.023046
Prover Time taken = 0.025242
Prover Time taken = 0.021244
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.025186
Prover Time taken = 0.020569
Prover Time taken = 0.020464
Prover Time taken = 0.020582
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015955
Prover Time taken = 0.019013
Prover Time taken = 0.015601
Prover Time taken = 0.01566
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.03766
Prover Time taken = 0.044942
Prover Time taken = 0.033374
Prover Time taken = 0.031973
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.032504
Prover Time taken = 0.029504
Prover Time taken = 0.029953
Prover Time taken = 0.030175
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015905
Prover Time taken = 0.016281
Prover Time taken = 0.017032
Prover Time taken = 0.017872
Verifying R4_Stable_R_t3: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.020124
Prover Time taken = 0.019068
Prover Time taken = 0.015643
Prover Time taken = 0.015825
Verifying R3_Stable_R_t3: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016208
Prover Time taken = 0.015704
Prover Time taken = 0.019313
Prover Time taken = 0.015776
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
Prover Time taken = 0.034655
Prover Time taken = 0.030805
Prover Time taken = 0.030722
Prover Time taken = 0.029034
Verifying R2_Stable_R_t3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.026843
Prover Time taken = 0.018656
Prover Time taken = 0.015619
Prover Time taken = 0.01645
Verifying R1_Stable_R_t3: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017116
Prover Time taken = 0.016182
Prover Time taken = 0.017662
Prover Time taken = 0.017859
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Added: Q0:0,0,0,0: positive
Prover Time taken = 0.013304
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0257970
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017849
Added Horn clause: 20 && 13 => 21
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0210260
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01722
Added Horn clause: 21 && 17 => 22
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0218270
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013344
Prover Time taken = 0.015745
Prover Time taken = 0.014927
Prover Time taken = 0.015373
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.014672
Added Horn clause: 20 => 23
Added Horn clause: 20 => 24
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0209630
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.007475
Prover Time taken = 0.007231
Prover Time taken = 0.007305
Prover Time taken = 0.010096
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016878
Added Horn clause: 24 && 13 => 25
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0244610
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.008599
Prover Time taken = 0.007662
Prover Time taken = 0.007781
Prover Time taken = 0.007183
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.020241
Added Horn clause: 25 && 17 => 26
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0211450
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.007111
Prover Time taken = 0.006948
Prover Time taken = 0.008899
Prover Time taken = 0.007008
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015111
Prover Time taken = 0.013419
Prover Time taken = 0.014686
Prover Time taken = 0.0126
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008884
Added Horn clause: 22 => 27
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0260360
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006265
Prover Time taken = 0.009047
Prover Time taken = 0.006391
Prover Time taken = 0.005641
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.037573
Added Horn clause: 27 => 28
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0234880
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && 0 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && 0 < c + t && -2 < c - t && -1 < c - t && 0 < c - t && -2 < c + l && -1 < c + l && 0 < c + l && -2 < c - l && -1 < c - l && 0 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013275
Prover Time taken = 0.0129
Prover Time taken = 0.016715
Prover Time taken = 0.01325
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && 0 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && 0 < c + t && -2 < c - t && -1 < c - t && 0 < c - t && -2 < c + l && -1 < c + l && 0 < c + l && -2 < c - l && -1 < c - l && 0 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < new_h && new_h <= -1 && new_h <= -1 && -2 < new_h && -1 < new_h && new_h <= 0 && new_h <= 0 && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && new_c <= -1 && new_c <= -1 && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && new_t <= -1 && new_t <= -1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && 0 < new_t && new_t <= 1 && new_t <= 1 && 0 < new_t && -2 < new_l && new_l <= -1 && new_l <= -1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && 0 < new_l && new_l <= 1 && new_l <= 1 && 0 < new_l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && h + new_h <= -1 && h + new_h <= -1 && -2 < h + new_h && -1 < h + new_h && h + new_h <= 0 && h + new_h <= 0 && -1 < h + new_h && 0 < h + new_h && h + new_h <= 1 && h + new_h <= 1 && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && 0 < h - new_h && h - new_h <= 1 && h - new_h <= 1 && 0 < h - new_h && -2 < h + new_c && h + new_c <= -1 && h + new_c <= -1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 0 && h + new_c <= 0 && -1 < h + new_c && 0 < h + new_c && h + new_c <= 1 && h + new_c <= 1 && 0 < h + new_c && -2 < h - new_c && h - new_c <= -1 && h - new_c <= -1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && 0 < h - new_c && h - new_c <= 1 && h - new_c <= 1 && 0 < h - new_c && -2 < h + new_t && h + new_t <= -1 && h + new_t <= -1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 0 && h + new_t <= 0 && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && h - new_t <= -1 && h - new_t <= -1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 0 && h - new_t <= 0 && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && h + new_l <= -1 && h + new_l <= -1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 0 && h + new_l <= 0 && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && h - new_l <= -1 && h - new_l <= -1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 0 && h - new_l <= 0 && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < c + new_h && c + new_h <= -1 && c + new_h <= -1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 0 && c + new_h <= 0 && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && -1 < c - new_h && c - new_h <= 0 && c - new_h <= 0 && -1 < c - new_h && 0 < c - new_h && c - new_h <= 1 && c - new_h <= 1 && 0 < c - new_h && -2 < c + new_c && c + new_c <= -1 && c + new_c <= -1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && 0 < c - new_c && c - new_c <= 1 && c - new_c <= 1 && 0 < c - new_c && -2 < c + new_t && c + new_t <= -1 && c + new_t <= -1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && 0 < c + new_t && c + new_t <= 1 && c + new_t <= 1 && 0 < c + new_t && -2 < c - new_t && c - new_t <= -1 && c - new_t <= -1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && 0 < c - new_t && c - new_t <= 1 && c - new_t <= 1 && 0 < c - new_t && -2 < c + new_l && c + new_l <= -1 && c + new_l <= -1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && 0 < c + new_l && c + new_l <= 1 && c + new_l <= 1 && 0 < c + new_l && -2 < c - new_l && c - new_l <= -1 && c - new_l <= -1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && 0 < c - new_l && c - new_l <= 1 && c - new_l <= 1 && 0 < c - new_l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + new_h && t + new_h <= -1 && t + new_h <= -1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 0 && t + new_h <= 0 && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && -1 < t - new_h && t - new_h <= 0 && t - new_h <= 0 && -1 < t - new_h && 0 < t - new_h && t - new_h <= 1 && t - new_h <= 1 && 0 < t - new_h && -2 < t + new_c && t + new_c <= -1 && t + new_c <= -1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && 0 < t - new_c && t - new_c <= 1 && t - new_c <= 1 && 0 < t - new_c && -2 < t + new_t && t + new_t <= -1 && t + new_t <= -1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && 0 < t + new_t && t + new_t <= 1 && t + new_t <= 1 && 0 < t + new_t && -2 < t - new_t && t - new_t <= -1 && t - new_t <= -1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && 0 < t - new_t && t - new_t <= 1 && t - new_t <= 1 && 0 < t - new_t && -2 < t + new_l && t + new_l <= -1 && t + new_l <= -1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && 0 < t + new_l && t + new_l <= 1 && t + new_l <= 1 && 0 < t + new_l && -2 < t - new_l && t - new_l <= -1 && t - new_l <= -1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && 0 < t - new_l && t - new_l <= 1 && t - new_l <= 1 && 0 < t - new_l && -2 < l + new_h && l + new_h <= -1 && l + new_h <= -1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 0 && l + new_h <= 0 && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && -1 < l - new_h && l - new_h <= 0 && l - new_h <= 0 && -1 < l - new_h && 0 < l - new_h && l - new_h <= 1 && l - new_h <= 1 && 0 < l - new_h && -2 < l + new_c && l + new_c <= -1 && l + new_c <= -1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && 0 < l - new_c && l - new_c <= 1 && l - new_c <= 1 && 0 < l - new_c && -2 < l + new_t && l + new_t <= -1 && l + new_t <= -1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && 0 < l + new_t && l + new_t <= 1 && l + new_t <= 1 && 0 < l + new_t && -2 < l - new_t && l - new_t <= -1 && l - new_t <= -1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && 0 < l - new_t && l - new_t <= 1 && l - new_t <= 1 && 0 < l - new_t && -2 < l + new_l && l + new_l <= -1 && l + new_l <= -1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && 0 < l + new_l && l + new_l <= 1 && l + new_l <= 1 && 0 < l + new_l && -2 < l - new_l && l - new_l <= -1 && l - new_l <= -1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && 0 < l - new_l && l - new_l <= 1 && l - new_l <= 1 && 0 < l - new_l && -2 < new_h + new_c && new_h + new_c <= -1 && new_h + new_c <= -1 && -2 < new_h + new_c && -1 < new_h + new_c && new_h + new_c <= 0 && new_h + new_c <= 0 && -1 < new_h + new_c && 0 < new_h + new_c && new_h + new_c <= 1 && new_h + new_c <= 1 && 0 < new_h + new_c && -2 < new_h - new_c && new_h - new_c <= -1 && new_h - new_c <= -1 && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && 0 < new_h - new_c && new_h - new_c <= 1 && new_h - new_c <= 1 && 0 < new_h - new_c && -2 < new_h + new_t && new_h + new_t <= -1 && new_h + new_t <= -1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 0 && new_h + new_t <= 0 && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && new_h - new_t <= -1 && new_h - new_t <= -1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 0 && new_h - new_t <= 0 && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && new_h + new_l <= -1 && new_h + new_l <= -1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 0 && new_h + new_l <= 0 && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && new_h - new_l <= -1 && new_h - new_l <= -1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 0 && new_h - new_l <= 0 && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && new_c + new_t <= -1 && new_c + new_t <= -1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && new_c - new_t <= -1 && new_c - new_t <= -1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && new_c + new_l <= -1 && new_c + new_l <= -1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && new_c - new_l <= -1 && new_c - new_l <= -1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && new_t + new_l <= -1 && new_t + new_l <= -1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && 0 < new_t + new_l && new_t + new_l <= 1 && new_t + new_l <= 1 && 0 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= -1 && new_t - new_l <= -1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && 0 < new_t - new_l && new_t - new_l <= 1 && new_t - new_l <= 1 && 0 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.04522
Added Horn clause: 23 => 29
Added Horn clause: 30 => 31
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0237110
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014422
Added Horn clause: 29 && 13 => 32
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0223720
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.018763
Added Horn clause: 32 && 17 => 33
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0221640
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017852
Prover Time taken = 0.014332
Prover Time taken = 0.014193
Prover Time taken = 0.014495
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.021915
Added Horn clause: 10 && 31 => 34
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0218110
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.015635
Prover Time taken = 0.006713
Prover Time taken = 0.006565
Prover Time taken = 0.006621
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016562
Prover Time taken = 0.013683
Prover Time taken = 0.015422
Prover Time taken = 0.014989
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005336
Prover Time taken = 0.005361
Prover Time taken = 0.00667
Prover Time taken = 0.005417
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016893
Added Horn clause: 8 && 31 => 35
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0204140
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.009156
Added Horn clause: 35 => 36
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0235360
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006748
Prover Time taken = 0.00489
Prover Time taken = 0.004822
Prover Time taken = 0.004433
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00933
Added Horn clause: 36 => 37
Added Horn clause: 38 => 39
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0215900
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006043
Prover Time taken = 0.006271
Prover Time taken = 0.005291
Prover Time taken = 0.005231
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.004225
Prover Time taken = 0.00385
Prover Time taken = 0.003498
Prover Time taken = 0.003527
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016212
Prover Time taken = 0.014366
Prover Time taken = 0.014626
Prover Time taken = 0.015169
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016779
Added Horn clause: 7 && 31 => 40
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0220840
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006222
Prover Time taken = 0.006649
Prover Time taken = 0.005005
Prover Time taken = 0.005462
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005091
Prover Time taken = 0.004578
Prover Time taken = 0.00474
Prover Time taken = 0.004663
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016863
Prover Time taken = 0.014014
Prover Time taken = 0.014241
Prover Time taken = 0.01485
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.021346
Added Horn clause: 37 => 41
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0213560
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010977
Prover Time taken = 0.012875
Prover Time taken = 0.01288
Prover Time taken = 0.015006
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012084
Prover Time taken = 0.011824
Prover Time taken = 0.01196
Prover Time taken = 0.015806
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 0 && new_c <= 0 && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && h + new_c <= 1 && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 0 && c + new_c <= 0 && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 0 && t + new_c <= 0 && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && -1 < t - new_c && t - new_c <= 0 && t - new_c <= 0 && -1 < t - new_c && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 0 && l + new_c <= 0 && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && -1 < l - new_c && l - new_c <= 0 && l - new_c <= 0 && -1 < l - new_c && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 0 && new_c + new_t <= 0 && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 0 && new_c - new_t <= 0 && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 0 && new_c + new_l <= 0 && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 0 && new_c - new_l <= 0 && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.024085
Added Horn clause: 37 => 42
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0226820
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015867
Prover Time taken = 0.015333
Prover Time taken = 0.014815
Prover Time taken = 0.017356
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.019468
Prover Time taken = 0.025989
Prover Time taken = 0.018878
Prover Time taken = 0.021529
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014969
Prover Time taken = 0.014936
Prover Time taken = 0.013734
Prover Time taken = 0.012804
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && new_h <= 1 && new_h <= 1 && 0 < new_h && -2 < new_c && -1 < new_c && 0 < new_c && new_c <= 1 && new_c <= 1 && 0 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && 0 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && 0 < h + new_t && h + new_t <= 1 && h + new_t <= 1 && 0 < h + new_t && -2 < h - new_t && -1 < h - new_t && 0 < h - new_t && h - new_t <= 1 && h - new_t <= 1 && 0 < h - new_t && -2 < h + new_l && -1 < h + new_l && 0 < h + new_l && h + new_l <= 1 && h + new_l <= 1 && 0 < h + new_l && -2 < h - new_l && -1 < h - new_l && 0 < h - new_l && h - new_l <= 1 && h - new_l <= 1 && 0 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c + new_h <= 1 && c + new_h <= 1 && 0 < c + new_h && -2 < c - new_h && c - new_h <= -1 && c - new_h <= -1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && 0 < c + new_c && c + new_c <= 1 && c + new_c <= 1 && 0 < c + new_c && -2 < c - new_c && c - new_c <= -1 && c - new_c <= -1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t + new_h <= 1 && t + new_h <= 1 && 0 < t + new_h && -2 < t - new_h && t - new_h <= -1 && t - new_h <= -1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && 0 < t + new_c && t + new_c <= 1 && t + new_c <= 1 && 0 < t + new_c && -2 < t - new_c && t - new_c <= -1 && t - new_c <= -1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l + new_h <= 1 && l + new_h <= 1 && 0 < l + new_h && -2 < l - new_h && l - new_h <= -1 && l - new_h <= -1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && 0 < l + new_c && l + new_c <= 1 && l + new_c <= 1 && 0 < l + new_c && -2 < l - new_c && l - new_c <= -1 && l - new_c <= -1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && new_h + new_t <= 1 && new_h + new_t <= 1 && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && new_h - new_t <= 1 && new_h - new_t <= 1 && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && new_h + new_l <= 1 && new_h + new_l <= 1 && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && new_h - new_l <= 1 && new_h - new_l <= 1 && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && 0 < new_c + new_t && new_c + new_t <= 1 && new_c + new_t <= 1 && 0 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && 0 < new_c - new_t && new_c - new_t <= 1 && new_c - new_t <= 1 && 0 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && 0 < new_c + new_l && new_c + new_l <= 1 && new_c + new_l <= 1 && 0 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && 0 < new_c - new_l && new_c - new_l <= 1 && new_c - new_l <= 1 && 0 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.022384
Added Horn clause: 23 => 43
Added Horn clause: 30 => 44
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0222440
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.019394
Prover Time taken = 0.017739
Prover Time taken = 0.014274
Prover Time taken = 0.015825
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && new_h <= 1 && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01175
Prover Time taken = 0.013588
Prover Time taken = 0.012352
Prover Time taken = 0.011422
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && new_h <= 1 && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017863
Prover Time taken = 0.015521
Prover Time taken = 0.011365
Prover Time taken = 0.012474
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && new_h <= 1 && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013249
Prover Time taken = 0.015461
Prover Time taken = 0.012581
Prover Time taken = 0.013488
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017005
Prover Time taken = 0.01687
Prover Time taken = 0.016735
Prover Time taken = 0.018423
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && new_h <= 1 && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c + new_h <= 1 && -2 < c - new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c + new_c <= 1 && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t + new_h <= 1 && -2 < t - new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l + new_h <= 1 && -2 < l - new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && new_h + new_t <= 1 && -2 < new_h - new_t && -1 < new_h - new_t && new_h - new_t <= 1 && -2 < new_h + new_l && -1 < new_h + new_l && new_h + new_l <= 1 && -2 < new_h - new_l && -1 < new_h - new_l && new_h - new_l <= 1 && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.019111
Added Horn clause: 27 => 45
Added Horn clause: 23 => 46
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0216630
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.021224
Prover Time taken = 0.018674
Prover Time taken = 0.015868
Prover Time taken = 0.014721
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.018008
Added Horn clause: 16 && 45 => 47
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0197590
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.011718
Prover Time taken = 0.00759
Prover Time taken = 0.007879
Prover Time taken = 0.007674
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010326
Prover Time taken = 0.012416
Prover Time taken = 0.009963
Prover Time taken = 0.009821
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.004729
Prover Time taken = 0.004681
Prover Time taken = 0.004721
Prover Time taken = 0.004703
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012295
Added Horn clause: 14 && 45 => 48
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0226660
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006293
Added Horn clause: 48 => 49
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0242070
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006103
Prover Time taken = 0.005335
Prover Time taken = 0.005202
Prover Time taken = 0.004647
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006885
Added Horn clause: 49 => 50
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0233840
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005415
Prover Time taken = 0.008371
Prover Time taken = 0.006349
Prover Time taken = 0.005341
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.003463
Prover Time taken = 0.003296
Prover Time taken = 0.003405
Prover Time taken = 0.00334
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010157
Prover Time taken = 0.016724
Prover Time taken = 0.013271
Prover Time taken = 0.011588
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012071
Prover Time taken = 0.012196
Prover Time taken = 0.012151
Prover Time taken = 0.012696
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016033
Prover Time taken = 0.018528
Prover Time taken = 0.016032
Prover Time taken = 0.016566
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.021836
Added Horn clause: 27 => 51
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0201650
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015937
Prover Time taken = 0.014093
Prover Time taken = 0.018081
Prover Time taken = 0.013812
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.019524
Prover Time taken = 0.015193
Prover Time taken = 0.015219
Prover Time taken = 0.015455
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01521
Prover Time taken = 0.014434
Prover Time taken = 0.014774
Prover Time taken = 0.017919
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01239
Prover Time taken = 0.011449
Prover Time taken = 0.011539
Prover Time taken = 0.013588
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012021
Prover Time taken = 0.013008
Prover Time taken = 0.013524
Prover Time taken = 0.012995
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013874
Prover Time taken = 0.01357
Prover Time taken = 0.016795
Prover Time taken = 0.014928
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.020132
Prover Time taken = 0.019531
Prover Time taken = 0.024466
Prover Time taken = 0.02503
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.020514
Prover Time taken = 0.019273
Prover Time taken = 0.020784
Prover Time taken = 0.019081
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013349
Prover Time taken = 0.01446
Prover Time taken = 0.01189
Prover Time taken = 0.01282
Verifying R4_Stable_R_t3: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017884
Prover Time taken = 0.013855
Prover Time taken = 0.013679
Prover Time taken = 0.013641
Verifying R3_Stable_R_t3: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015183
Prover Time taken = 0.015005
Prover Time taken = 0.013905
Prover Time taken = 0.016014
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.023544
Prover Time taken = 0.02075
Prover Time taken = 0.02089
Prover Time taken = 0.02148
Verifying R2_Stable_R_t3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01403
Prover Time taken = 0.016408
Prover Time taken = 0.014381
Prover Time taken = 0.013955
Verifying R1_Stable_R_t3: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016544
Prover Time taken = 0.01443
Prover Time taken = 0.014399
Prover Time taken = 0.014615
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Added: R0:0,0,0,0: positive
Prover Time taken = 0.009087
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0225870
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014139
Added Horn clause: 52 && 18 => 53
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0203080
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013184
Added Horn clause: 53 && 54 => 55
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0202820
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01418
Added Horn clause: 55 && 56 => 57
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0204330
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012701
Added Horn clause: 53 && 19 => 58
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0234960
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010702
Prover Time taken = 0.009348
Prover Time taken = 0.009347
Prover Time taken = 0.009311
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.012457
Added Horn clause: 52 => 59
Added Horn clause: 52 => 60
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0215250
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007736
Prover Time taken = 0.007086
Prover Time taken = 0.006129
Prover Time taken = 0.006124
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014596
Added Horn clause: 60 && 18 => 61
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0239030
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006415
Prover Time taken = 0.007167
Prover Time taken = 0.00784
Prover Time taken = 0.006435
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015011
Added Horn clause: 61 && 54 => 62
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0229080
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006995
Prover Time taken = 0.005408
Prover Time taken = 0.006608
Prover Time taken = 0.00878
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012101
Added Horn clause: 62 && 56 => 63
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0230890
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008247
Prover Time taken = 0.005656
Prover Time taken = 0.005652
Prover Time taken = 0.005745
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011453
Added Horn clause: 61 && 19 => 64
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0213190
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006856
Prover Time taken = 0.005651
Prover Time taken = 0.005392
Prover Time taken = 0.005302
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010474
Prover Time taken = 0.009461
Prover Time taken = 0.011994
Prover Time taken = 0.009471
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007424
Added Horn clause: 53 => 65
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0226500
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.010042
Added Horn clause: 58 => 66
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0282550
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006048
Added Horn clause: 55 => 67
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0251860
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006104
Added Horn clause: 57 => 68
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0258190
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.004864
Prover Time taken = 0.004942
Prover Time taken = 0.004845
Prover Time taken = 0.004922
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
Prover Time taken = 0.016538
Added Horn clause: 68 => 69
Added Horn clause: 68 => 70
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0207040
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && 0 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && 0 < c + t && -2 < c - t && -1 < c - t && 0 < c - t && -2 < c + l && -1 < c + l && 0 < c + l && -2 < c - l && -1 < c - l && 0 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && 0 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && 0 < c + t && -2 < c - t && -1 < c - t && 0 < c - t && -2 < c + l && -1 < c + l && 0 < c + l && -2 < c - l && -1 < c - l && 0 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008312
Added Horn clause: 59 => 71
Added Horn clause: 59 => 72
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0201990
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.010803
Added Horn clause: 66 => 73
Added Horn clause: 66 => 74
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0203310
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00505
Prover Time taken = 0.003832
Prover Time taken = 0.004673
Prover Time taken = 0.004928
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c && -2 < h + t && h + t <= -1 && h + t <= -1 && -2 < h + t && -1 < h + t && h + t <= 0 && h + t <= 0 && -1 < h + t && 0 < h + t && h + t <= 1 && h + t <= 1 && 0 < h + t && -2 < h - t && h - t <= -1 && h - t <= -1 && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && 0 < h - t && h - t <= 1 && h - t <= 1 && 0 < h - t && -2 < h + l && h + l <= -1 && h + l <= -1 && -2 < h + l && -1 < h + l && h + l <= 0 && h + l <= 0 && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && h - l <= -1 && h - l <= -1 && -2 < h - l && -1 < h - l && h - l <= 0 && h - l <= 0 && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && c + t <= -1 && c + t <= -1 && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && 0 < c + t && c + t <= 1 && c + t <= 1 && 0 < c + t && -2 < c - t && c - t <= -1 && c - t <= -1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && 0 < c - t && c - t <= 1 && c - t <= 1 && 0 < c - t && -2 < c + l && c + l <= -1 && c + l <= -1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && c - l <= -1 && c - l <= -1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.026351
Added Horn clause: 75 => 76
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0233110
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && 0 < h + l && h + l <= 1 && h + l <= 1 && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && h - l <= 1 && h - l <= 1 && 0 < h - l && -2 < c + t && -1 < c + t && 0 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && 0 < c + l && c + l <= 1 && c + l <= 1 && 0 < c + l && -2 < c - l && -1 < c - l && 0 < c - l && c - l <= 1 && c - l <= 1 && 0 < c - l && -2 < t + l && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= -1 && h - new_h <= -1 && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && h + new_t <= 1 && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= -1 && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && 0 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && 0 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && new_c + new_t <= 1 && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.026545
Added Horn clause: 72 => 77
Added Horn clause: 75 => 78
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0241810
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.013448
Added Horn clause: 79 && 78 => 80
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0201410
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014259
Prover Time taken = 0.011951
Prover Time taken = 0.010209
Prover Time taken = 0.009746
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012758
Prover Time taken = 0.011331
Prover Time taken = 0.013633
Prover Time taken = 0.01188
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016213
Prover Time taken = 0.020575
Prover Time taken = 0.017744
Prover Time taken = 0.02336
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015484
Prover Time taken = 0.012276
Prover Time taken = 0.011977
Prover Time taken = 0.011971
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014254
Prover Time taken = 0.013674
Prover Time taken = 0.013611
Prover Time taken = 0.016024
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && 0 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && 0 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && 0 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && 0 < t + new_h && t - new_h <= -1 && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && 0 < l + new_h && l - new_h <= -1 && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && 0 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && 0 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && 0 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && 0 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 0 && c + new_t <= 0 && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 0 && c + new_l <= 0 && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 0 && c - new_l <= 0 && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.023629
Added Horn clause: 70 => 81
Added Horn clause: 72 => 82
Added Horn clause: 75 => 83
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0237610
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012738
Prover Time taken = 0.01066
Prover Time taken = 0.009047
Prover Time taken = 0.00893
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014676
Prover Time taken = 0.016267
Prover Time taken = 0.014102
Prover Time taken = 0.013423
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011416
Added Horn clause: 84 && 85 => 86
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0216320
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006585
Prover Time taken = 0.007688
Prover Time taken = 0.00557
Prover Time taken = 0.005613
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.009016
Prover Time taken = 0.008983
Prover Time taken = 0.009256
Prover Time taken = 0.009522
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.004185
Prover Time taken = 0.004582
Prover Time taken = 0.004356
Prover Time taken = 0.004789
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014355
Added Horn clause: 35 && 83 => 87
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0222690
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00584
Added Horn clause: 87 => 88
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0240700
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00402
Prover Time taken = 0.005164
Prover Time taken = 0.004147
Prover Time taken = 0.004086
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008517
Added Horn clause: 88 => 89
Added Horn clause: 90 => 91
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0278670
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006663
Prover Time taken = 0.006983
Prover Time taken = 0.004736
Prover Time taken = 0.004801
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.003126
Prover Time taken = 0.006254
Prover Time taken = 0.003652
Prover Time taken = 0.003623
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.009467
Prover Time taken = 0.008604
Prover Time taken = 0.008756
Prover Time taken = 0.008911
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && 0 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.014704
Added Horn clause: 40 && 83 => 92
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0212300
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005937
Prover Time taken = 0.004511
Prover Time taken = 0.00464
Prover Time taken = 0.004413
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.003698
Prover Time taken = 0.003663
Prover Time taken = 0.003858
Prover Time taken = 0.005046
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010003
Prover Time taken = 0.009433
Prover Time taken = 0.00926
Prover Time taken = 0.009302
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && h + t <= 1 && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t + new_c <= 1 && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017083
Added Horn clause: 89 => 93
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0239600
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.008959
Prover Time taken = 0.009325
Prover Time taken = 0.010029
Prover Time taken = 0.011134
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011228
Prover Time taken = 0.011306
Prover Time taken = 0.011167
Prover Time taken = 0.018717
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 0 && new_t <= 0 && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && c + new_t <= 1 && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 0 && t + new_t <= 0 && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 0 && l + new_t <= 0 && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && -1 < l - new_t && l - new_t <= 0 && l - new_t <= 0 && -1 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 0 && new_t + new_l <= 0 && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 0 && new_t - new_l <= 0 && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016988
Added Horn clause: 89 => 94
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0258130
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016467
Prover Time taken = 0.011863
Prover Time taken = 0.009255
Prover Time taken = 0.009263
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01557
Prover Time taken = 0.012437
Prover Time taken = 0.012464
Prover Time taken = 0.012478
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010937
Prover Time taken = 0.011617
Prover Time taken = 0.011629
Prover Time taken = 0.010723
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017059
Prover Time taken = 0.013154
Prover Time taken = 0.013208
Prover Time taken = 0.012475
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012309
Prover Time taken = 0.012533
Prover Time taken = 0.009838
Prover Time taken = 0.00962
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011796
Prover Time taken = 0.009655
Prover Time taken = 0.009733
Prover Time taken = 0.011491
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010049
Prover Time taken = 0.008987
Prover Time taken = 0.008845
Prover Time taken = 0.008896
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 0 && h - t <= 0 && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && new_c <= 1 && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && h + new_l <= 1 && -2 < h - new_l && -1 < h - new_l && h - new_l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && -2 < t - new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l + new_c <= 1 && -2 < l - new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && new_c + new_l <= 1 && -2 < new_c - new_l && -1 < new_c - new_l && new_c - new_l <= 1 && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.018865
Added Horn clause: 74 => 95
Added Horn clause: 70 => 96
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0231510
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010362
Added Horn clause: 97 && 98 => 99
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0250090
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011082
Prover Time taken = 0.007638
Prover Time taken = 0.007681
Prover Time taken = 0.008562
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011092
Prover Time taken = 0.010165
Prover Time taken = 0.013436
Prover Time taken = 0.009837
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.016856
Prover Time taken = 0.014795
Prover Time taken = 0.016962
Prover Time taken = 0.014355
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011185
Prover Time taken = 0.010353
Prover Time taken = 0.010722
Prover Time taken = 0.014425
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.018498
Prover Time taken = 0.011722
Prover Time taken = 0.011769
Prover Time taken = 0.01165
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && h - new_t <= 1 && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t + new_t <= 1 && -2 < t - new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017116
Added Horn clause: 74 => 100
Added Horn clause: 70 => 101
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0233950
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.008345
Prover Time taken = 0.008557
Prover Time taken = 0.008328
Prover Time taken = 0.007606
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010147
Prover Time taken = 0.00964
Prover Time taken = 0.009953
Prover Time taken = 0.009977
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013115
Added Horn clause: 47 && 101 => 102
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0238490
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00696
Prover Time taken = 0.005043
Prover Time taken = 0.005242
Prover Time taken = 0.005274
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010465
Prover Time taken = 0.009557
Prover Time taken = 0.010734
Prover Time taken = 0.008702
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005529
Prover Time taken = 0.005623
Prover Time taken = 0.005409
Prover Time taken = 0.00418
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010983
Added Horn clause: 48 && 101 => 103
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0236720
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005736
Added Horn clause: 103 => 104
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0256120
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.006992
Prover Time taken = 0.00388
Prover Time taken = 0.003898
Prover Time taken = 0.004724
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008501
Added Horn clause: 104 => 105
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0257960
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005483
Prover Time taken = 0.005061
Prover Time taken = 0.004815
Prover Time taken = 0.004756
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.004067
Prover Time taken = 0.002977
Prover Time taken = 0.002994
Prover Time taken = 0.00306
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011785
Prover Time taken = 0.00871
Prover Time taken = 0.008914
Prover Time taken = 0.008804
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.015611
Prover Time taken = 0.011569
Prover Time taken = 0.010003
Prover Time taken = 0.009691
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012578
Prover Time taken = 0.014618
Prover Time taken = 0.011783
Prover Time taken = 0.011829
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010296
Prover Time taken = 0.009751
Prover Time taken = 0.016494
Prover Time taken = 0.016297
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012362
Prover Time taken = 0.012404
Prover Time taken = 0.013713
Prover Time taken = 0.011778
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010906
Prover Time taken = 0.008462
Prover Time taken = 0.008216
Prover Time taken = 0.008075
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009671
Prover Time taken = 0.008936
Prover Time taken = 0.008896
Prover Time taken = 0.009542
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 0 && h - new_c <= 0 && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 0 && new_h - new_c <= 0 && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.015666
Added Horn clause: 106 => 107
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0255040
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.008344
Prover Time taken = 0.007952
Prover Time taken = 0.007953
Prover Time taken = 0.008878
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009213
Prover Time taken = 0.008668
Prover Time taken = 0.008263
Prover Time taken = 0.00892
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011783
Prover Time taken = 0.009344
Prover Time taken = 0.010995
Prover Time taken = 0.009325
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012086
Prover Time taken = 0.011904
Prover Time taken = 0.011935
Prover Time taken = 0.011904
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011725
Prover Time taken = 0.009161
Prover Time taken = 0.008746
Prover Time taken = 0.008659
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009551
Prover Time taken = 0.009516
Prover Time taken = 0.009567
Prover Time taken = 0.009516
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && new_h - new_c <= 1 && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.014216
Added Horn clause: 74 => 108
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0257740
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010838
Prover Time taken = 0.011739
Prover Time taken = 0.010853
Prover Time taken = 0.010793
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010693
Prover Time taken = 0.009856
Prover Time taken = 0.008037
Prover Time taken = 0.008024
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011937
Prover Time taken = 0.013045
Prover Time taken = 0.011318
Prover Time taken = 0.011079
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012286
Prover Time taken = 0.015522
Prover Time taken = 0.013006
Prover Time taken = 0.012176
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009173
Prover Time taken = 0.008422
Prover Time taken = 0.008403
Prover Time taken = 0.01034
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010196
Prover Time taken = 0.010129
Prover Time taken = 0.016057
Prover Time taken = 0.014531
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.014348
Prover Time taken = 0.012871
Prover Time taken = 0.014822
Prover Time taken = 0.011368
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.016525
Added Horn clause: 76 => 109
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0225040
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010038
Prover Time taken = 0.00856
Prover Time taken = 0.009324
Prover Time taken = 0.010007
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007128
Added Horn clause: 110 => 111
Added Horn clause: 110 => 112
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0247790
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005557
Prover Time taken = 0.004801
Prover Time taken = 0.004709
Prover Time taken = 0.00463
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011559
Prover Time taken = 0.008589
Prover Time taken = 0.008492
Prover Time taken = 0.008238
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00503
Prover Time taken = 0.004845
Prover Time taken = 0.004791
Prover Time taken = 0.004871
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006777
Added Horn clause: 113 => 114
Added Horn clause: 113 => 115
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0231400
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.004899
Prover Time taken = 0.004585
Prover Time taken = 0.004582
Prover Time taken = 0.005298
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.016123
Added Horn clause: 116 => 117
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0257880
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.016814
Added Horn clause: 115 => 118
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0251950
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009539
Prover Time taken = 0.008303
Prover Time taken = 0.012315
Prover Time taken = 0.00775
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010121
Prover Time taken = 0.010136
Prover Time taken = 0.010632
Prover Time taken = 0.00985
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012702
Prover Time taken = 0.012133
Prover Time taken = 0.012221
Prover Time taken = 0.012483
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.018734
Prover Time taken = 0.018333
Prover Time taken = 0.013729
Prover Time taken = 0.012556
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 0 && t + new_l <= 0 && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013495
Added Horn clause: 115 => 119
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0250220
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012808
Prover Time taken = 0.008486
Prover Time taken = 0.009541
Prover Time taken = 0.007811
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010747
Prover Time taken = 0.008017
Prover Time taken = 0.008524
Prover Time taken = 0.008143
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009732
Prover Time taken = 0.009846
Prover Time taken = 0.011988
Prover Time taken = 0.011687
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012189
Prover Time taken = 0.011423
Prover Time taken = 0.011506
Prover Time taken = 0.012235
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011689
Prover Time taken = 0.008361
Prover Time taken = 0.008175
Prover Time taken = 0.00821
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009686
Prover Time taken = 0.009642
Prover Time taken = 0.009832
Prover Time taken = 0.009794
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011772
Prover Time taken = 0.011124
Prover Time taken = 0.011065
Prover Time taken = 0.010741
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.014932
Added Horn clause: 81 => 120
Added Horn clause: 121 => 122
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0244050
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009798
Added Horn clause: 80 && 123 => 124
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0271020
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012161
Prover Time taken = 0.007057
Prover Time taken = 0.007084
Prover Time taken = 0.007417
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009947
Prover Time taken = 0.009685
Prover Time taken = 0.010295
Prover Time taken = 0.01146
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012207
Prover Time taken = 0.012768
Prover Time taken = 0.012124
Prover Time taken = 0.014029
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011329
Prover Time taken = 0.010119
Prover Time taken = 0.01003
Prover Time taken = 0.010192
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010997
Prover Time taken = 0.010802
Prover Time taken = 0.010919
Prover Time taken = 0.010973
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.009097
Prover Time taken = 0.0087
Prover Time taken = 0.008185
Prover Time taken = 0.008579
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008213
Added Horn clause: 120 => 125
Added Horn clause: 120 => 126
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0251230
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005106
Prover Time taken = 0.004739
Prover Time taken = 0.006755
Prover Time taken = 0.004787
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011648
Prover Time taken = 0.009003
Prover Time taken = 0.009141
Prover Time taken = 0.008923
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.005207
Prover Time taken = 0.004675
Prover Time taken = 0.006789
Prover Time taken = 0.004566
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006963
Added Horn clause: 125 => 127
Added Horn clause: 125 => 128
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0305800
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.003949
Prover Time taken = 0.003775
Prover Time taken = 0.003716
Prover Time taken = 0.003514
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.015342
Added Horn clause: 128 => 129
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0261280
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013839
Added Horn clause: 128 => 130
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0268160
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011913
Added Horn clause: 131 && 132 => 133
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0292400
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010906
Prover Time taken = 0.007071
Prover Time taken = 0.007077
Prover Time taken = 0.007834
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010031
Prover Time taken = 0.009646
Prover Time taken = 0.009525
Prover Time taken = 0.011314
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.017212
Prover Time taken = 0.014944
Prover Time taken = 0.012546
Prover Time taken = 0.014161
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009638
Prover Time taken = 0.012814
Prover Time taken = 0.011805
Prover Time taken = 0.011746
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011071
Prover Time taken = 0.010727
Prover Time taken = 0.011021
Prover Time taken = 0.011897
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013247
Added Horn clause: 128 => 134
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0290030
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013633
Prover Time taken = 0.013587
Prover Time taken = 0.008486
Prover Time taken = 0.009322
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.008122
Prover Time taken = 0.007624
Prover Time taken = 0.007815
Prover Time taken = 0.009418
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010722
Prover Time taken = 0.00893
Prover Time taken = 0.008916
Prover Time taken = 0.009472
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015359
Prover Time taken = 0.014592
Prover Time taken = 0.012358
Prover Time taken = 0.012752
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009375
Prover Time taken = 0.00822
Prover Time taken = 0.009523
Prover Time taken = 0.008197
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013039
Prover Time taken = 0.01269
Prover Time taken = 0.012558
Prover Time taken = 0.011948
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013493
Prover Time taken = 0.011241
Prover Time taken = 0.011439
Prover Time taken = 0.011028
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013988
Added Horn clause: 81 => 135
Added Horn clause: 136 => 137
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0283530
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.007541
Prover Time taken = 0.009314
Prover Time taken = 0.007003
Prover Time taken = 0.006968
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.0104
Prover Time taken = 0.01001
Prover Time taken = 0.010025
Prover Time taken = 0.010536
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009627
Added Horn clause: 86 && 138 => 139
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0265080
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.008098
Prover Time taken = 0.004876
Prover Time taken = 0.004731
Prover Time taken = 0.004688
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011826
Added Horn clause: 139 && 137 => 140
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0261550
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007161
Prover Time taken = 0.006287
Prover Time taken = 0.005128
Prover Time taken = 0.006392
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009676
Prover Time taken = 0.007124
Prover Time taken = 0.007131
Prover Time taken = 0.007302
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.004815
Prover Time taken = 0.004485
Prover Time taken = 0.004277
Prover Time taken = 0.003656
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.01035
Added Horn clause: 141 && 142 => 143
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0262290
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.005417
Added Horn clause: 144 => 145
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0270670
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.010224
Prover Time taken = 0.006377
Prover Time taken = 0.003556
Prover Time taken = 0.004512
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && h + l <= 1 && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.009183
Added Horn clause: 146 => 147
Added Horn clause: 145 => 148
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0280470
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006228
Prover Time taken = 0.004419
Prover Time taken = 0.004255
Prover Time taken = 0.004335
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.003697
Prover Time taken = 0.003117
Prover Time taken = 0.003415
Prover Time taken = 0.003494
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.013086
Added Horn clause: 144 && 137 => 149
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0283860
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.005469
Added Horn clause: 149 => 150
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0287060
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.003582
Prover Time taken = 0.004417
Prover Time taken = 0.004414
Prover Time taken = 0.004501
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && 0 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007313
Added Horn clause: 150 => 151
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0271700
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.00504
Prover Time taken = 0.004384
Prover Time taken = 0.00461
Prover Time taken = 0.005455
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.00379
Prover Time taken = 0.003707
Prover Time taken = 0.003707
Prover Time taken = 0.00267
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.008822
Prover Time taken = 0.007712
Prover Time taken = 0.007044
Prover Time taken = 0.007116
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.0081
Prover Time taken = 0.007919
Prover Time taken = 0.007904
Prover Time taken = 0.007723
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 0 && new_l <= 0 && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && c + new_l <= 1 && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t + new_l <= 1 && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l + new_t <= 1 && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l + new_l <= 0 && l + new_l <= 0 && -1 < l + new_l && l + new_l <= 1 && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && new_t + new_l <= 1 && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.018404
Added Horn clause: 147 => 152
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0319330
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.009408
Prover Time taken = 0.010092
Prover Time taken = 0.009325
Prover Time taken = 0.008256
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015046
Prover Time taken = 0.012728
Prover Time taken = 0.011798
Prover Time taken = 0.011688
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011621
Prover Time taken = 0.011645
Prover Time taken = 0.009653
Prover Time taken = 0.009499
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011182
Prover Time taken = 0.010587
Prover Time taken = 0.012972
Prover Time taken = 0.010528
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.007935
Prover Time taken = 0.007688
Prover Time taken = 0.007852
Prover Time taken = 0.007883
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.00889
Prover Time taken = 0.007974
Prover Time taken = 0.00807
Prover Time taken = 0.008128
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011372
Prover Time taken = 0.008458
Prover Time taken = 0.011516
Prover Time taken = 0.008397
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.01307
Prover Time taken = 0.012483
Prover Time taken = 0.018062
Prover Time taken = 0.014785
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012214
Added Horn clause: 81 => 153
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0299890
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.007666
Prover Time taken = 0.00776
Prover Time taken = 0.00771
Prover Time taken = 0.007037
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.007702
Prover Time taken = 0.00718
Prover Time taken = 0.008246
Prover Time taken = 0.007322
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009495
Prover Time taken = 0.00979
Prover Time taken = 0.007668
Prover Time taken = 0.007617
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012201
Prover Time taken = 0.010534
Prover Time taken = 0.012228
Prover Time taken = 0.010337
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.009213
Prover Time taken = 0.007201
Prover Time taken = 0.007637
Prover Time taken = 0.008175
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.008683
Prover Time taken = 0.008665
Prover Time taken = 0.008763
Prover Time taken = 0.008836
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.014513
Prover Time taken = 0.011785
Prover Time taken = 0.011013
Prover Time taken = 0.010788
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010454
Prover Time taken = 0.012578
Prover Time taken = 0.010936
Prover Time taken = 0.009979
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011693
Prover Time taken = 0.010241
Prover Time taken = 0.012045
Prover Time taken = 0.010179
Verifying R4_Stable_R_t3: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01009
Added Horn clause: 95 && 51 => 154
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0289080
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012098
Prover Time taken = 0.016034
Prover Time taken = 0.011355
Prover Time taken = 0.010661
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011436
Added Horn clause: 154 => 155
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0279300
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.008484
Prover Time taken = 0.007733
Prover Time taken = 0.007654
Prover Time taken = 0.009155
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006776
Added Horn clause: 155 => 156
Added Horn clause: 155 => 157
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0279220
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
Prover Time taken = 0.004757
Prover Time taken = 0.005035
Prover Time taken = 0.005687
Prover Time taken = 0.004705
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012297
Prover Time taken = 0.013792
Prover Time taken = 0.008513
Prover Time taken = 0.007685
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
Prover Time taken = 0.003387
Prover Time taken = 0.003264
Prover Time taken = 0.003272
Prover Time taken = 0.00328
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.006731
Added Horn clause: 156 => 158
Added Horn clause: 156 => 159
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0284520
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
Prover Time taken = 0.00354
Prover Time taken = 0.003556
Prover Time taken = 0.004503
Prover Time taken = 0.004359
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.01833
Added Horn clause: 159 => 160
Added Horn clause: 161 => 162
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0285420
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.007916
Prover Time taken = 0.007614
Prover Time taken = 0.007794
Prover Time taken = 0.009568
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012427
Prover Time taken = 0.015607
Prover Time taken = 0.009757
Prover Time taken = 0.009417
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011259
Prover Time taken = 0.010707
Prover Time taken = 0.010724
Prover Time taken = 0.011813
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012046
Prover Time taken = 0.009254
Prover Time taken = 0.009146
Prover Time taken = 0.010903
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && new_c - new_t <= 1 && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 0 && c - new_t <= 0 && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 0 && t - new_l <= 0 && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.016151
Added Horn clause: 159 => 163
Added Horn clause: 161 => 164
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0292650
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.013692
Added Horn clause: 28 && 165 => 166
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0305550
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008641
Prover Time taken = 0.00745
Prover Time taken = 0.007254
Prover Time taken = 0.00724
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010319
Prover Time taken = 0.009758
Prover Time taken = 0.009764
Prover Time taken = 0.010103
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.007315
Prover Time taken = 0.009359
Prover Time taken = 0.010153
Prover Time taken = 0.009586
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.010051
Prover Time taken = 0.007501
Prover Time taken = 0.008056
Prover Time taken = 0.007184
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.008331
Prover Time taken = 0.007571
Prover Time taken = 0.00739
Prover Time taken = 0.008642
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012245
Prover Time taken = 0.011047
Prover Time taken = 0.011822
Prover Time taken = 0.011293
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010941
Prover Time taken = 0.011387
Prover Time taken = 0.010984
Prover Time taken = 0.011305
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015949
Prover Time taken = 0.011455
Prover Time taken = 0.011285
Prover Time taken = 0.010799
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.01275
Prover Time taken = 0.011928
Prover Time taken = 0.008157
Prover Time taken = 0.007745
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.011289
Prover Time taken = 0.009339
Prover Time taken = 0.009371
Prover Time taken = 0.009
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t - l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l
}
Prover Time taken = 0.012658
Added Horn clause: 159 => 167
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0313440
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010026
Added Horn clause: 47 && 168 => 169
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0320930
Verifying post_condition: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
Prover Time taken = 0.006958
Prover Time taken = 0.005742
Prover Time taken = 0.004644
Prover Time taken = 0.004555
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009574
Prover Time taken = 0.009217
Prover Time taken = 0.009246
Prover Time taken = 0.009213
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.003582
Prover Time taken = 0.003996
Prover Time taken = 0.003623
Prover Time taken = 0.003548
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010058
Added Horn clause: 48 && 168 => 170
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0291810
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
Prover Time taken = 0.005879
Added Horn clause: 170 => 171
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0318590
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
Prover Time taken = 0.003408
Prover Time taken = 0.003137
Prover Time taken = 0.003101
Prover Time taken = 0.003187
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1
}
Prover Time taken = 0.007656
Added Horn clause: 171 => 172
Added Horn clause: 173 => 174
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0292400
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
Prover Time taken = 0.004638
Prover Time taken = 0.004303
Prover Time taken = 0.004347
Prover Time taken = 0.004174
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
Prover Time taken = 0.002884
Prover Time taken = 0.00358
Prover Time taken = 0.002722
Prover Time taken = 0.003148
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010145
Prover Time taken = 0.007862
Prover Time taken = 0.007949
Prover Time taken = 0.008624
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.00823
Prover Time taken = 0.007898
Prover Time taken = 0.008073
Prover Time taken = 0.008018
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && -1 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 0 && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && -1 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.012062
Added Horn clause: 174 => 175
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0318290
Verifying R5_Stable_R_t3: 
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.007984
Prover Time taken = 0.007875
Prover Time taken = 0.008857
Prover Time taken = 0.011736
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.01144
Prover Time taken = 0.010161
Prover Time taken = 0.01022
Prover Time taken = 0.010387
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010223
Prover Time taken = 0.009757
Prover Time taken = 0.009644
Prover Time taken = 0.014225
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.013424
Prover Time taken = 0.008949
Prover Time taken = 0.007325
Prover Time taken = 0.009556
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009513
Prover Time taken = 0.008966
Prover Time taken = 0.009151
Prover Time taken = 0.008249
Verifying R0_Stable_R_t3: 
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010246
Prover Time taken = 0.007371
Prover Time taken = 0.008338
Prover Time taken = 0.007636
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010111
Prover Time taken = 0.0117
Prover Time taken = 0.009475
Prover Time taken = 0.01044
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008452
Prover Time taken = 0.008463
Prover Time taken = 0.010443
Prover Time taken = 0.008607
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.014112
Prover Time taken = 0.013139
Prover Time taken = 0.013354
Prover Time taken = 0.011645
Verifying R4_Stable_R_t3: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.008925
Prover Time taken = 0.007749
Prover Time taken = 0.00756
Prover Time taken = 0.007688
Verifying R3_Stable_R_t3: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010709
Prover Time taken = 0.008352
Prover Time taken = 0.008955
Prover Time taken = 0.008683
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.013628
Added Horn clause: 114 => 176
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0320190
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.011278
Prover Time taken = 0.009449
Prover Time taken = 0.009074
Prover Time taken = 0.009189
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010711
Prover Time taken = 0.011258
Prover Time taken = 0.010951
Prover Time taken = 0.009724
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.015554
Prover Time taken = 0.011543
Prover Time taken = 0.010947
Prover Time taken = 0.010832
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.013059
Prover Time taken = 0.013242
Prover Time taken = 0.010657
Prover Time taken = 0.010087
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010135
Prover Time taken = 0.00958
Prover Time taken = 0.009679
Prover Time taken = 0.011733
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008502
Prover Time taken = 0.009257
Prover Time taken = 0.008824
Prover Time taken = 0.008489
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.01056
Prover Time taken = 0.010434
Prover Time taken = 0.010467
Prover Time taken = 0.011314
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 0 && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.012428
Added Horn clause: 127 => 177
Added Horn clause: 178 => 179
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0325960
Verifying Q2_Stable_R_t2: 
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008399
Prover Time taken = 0.007986
Prover Time taken = 0.00746
Prover Time taken = 0.007185
Verifying Q3_Stable_R_t2: 
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.01028
Prover Time taken = 0.012192
Prover Time taken = 0.00957
Prover Time taken = 0.009861
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009455
Prover Time taken = 0.007145
Prover Time taken = 0.007413
Prover Time taken = 0.008243
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010236
Prover Time taken = 0.008381
Prover Time taken = 0.0078
Prover Time taken = 0.007209
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008359
Prover Time taken = 0.008207
Prover Time taken = 0.008492
Prover Time taken = 0.014956
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.021893
Prover Time taken = 0.011648
Prover Time taken = 0.010892
Prover Time taken = 0.010775
Verifying Q0_Stable_R_t2: 
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.013834
Prover Time taken = 0.010376
Prover Time taken = 0.012106
Prover Time taken = 0.010697
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.011468
Prover Time taken = 0.010774
Prover Time taken = 0.009586
Prover Time taken = 0.009792
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.010503
Prover Time taken = 0.007827
Prover Time taken = 0.008085
Prover Time taken = 0.008123
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009072
Prover Time taken = 0.010697
Prover Time taken = 0.009062
Prover Time taken = 0.009316
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.011212
Prover Time taken = 0.010631
Prover Time taken = 0.010736
Prover Time taken = 0.013038
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.011302
Prover Time taken = 0.009794
Prover Time taken = 0.009957
Prover Time taken = 0.008683
Verifying Q1_Stable_R_t2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.013066
Prover Time taken = 0.009979
Prover Time taken = 0.010004
Prover Time taken = 0.009919
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.012399
Added Horn clause: 127 => 180
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-RG.bpl
Total learner time was 00:00:00.0313640
Verifying P4_Stable_R_t1: 
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.00879
Prover Time taken = 0.007379
Prover Time taken = 0.007426
Prover Time taken = 0.007523
Verifying P0_Stable_R_t1: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009957
Prover Time taken = 0.007414
Prover Time taken = 0.007229
Prover Time taken = 0.008647
Verifying P3_Stable_R_t1: 
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008892
Prover Time taken = 0.008579
Prover Time taken = 0.00857
Prover Time taken = 0.008603
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.010103
Prover Time taken = 0.009703
Prover Time taken = 0.009803
Prover Time taken = 0.009705
Verifying P1_Stable_R_t1: 
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.008621
Prover Time taken = 0.007899
Prover Time taken = 0.00911
Prover Time taken = 0.007921
Verifying P2_Stable_R_t1: 
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009857
Prover Time taken = 0.008831
Prover Time taken = 0.009096
Prover Time taken = 0.009172
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.012726
Prover Time taken = 0.010372
Prover Time taken = 0.013214
Prover Time taken = 0.01027
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.012213
Prover Time taken = 0.010153
Prover Time taken = 0.010577
Prover Time taken = 0.009831
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
Prover Time taken = 0.009502
Prover Time taken = 0.011768
Prover Time taken = 0.010006
Prover Time taken = 0.009677
Verifying R2_Stable_R_t3: 
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.008569
Prover Time taken = 0.009732
Prover Time taken = 0.008201
Prover Time taken = 0.007862
Verifying R1_Stable_R_t3: 
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
Prover Time taken = 0.008533
Prover Time taken = 0.00805
Prover Time taken = 0.009339
Prover Time taken = 0.008194
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
Prover Time taken = 0.004279
Prover Time taken = 0.004044
Prover Time taken = 0.004421
Prover Time taken = 0.005911
Prover time = 17.91
Number of prover queries = 1436
Learner time = 2.93
Number of learner queries = 116
Total time: 93.85
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:146
function {:existential true} {:inline} P0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1 && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && h - t <= 1 && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && h - l <= 1 && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1
}
function {:existential true} {:inline} P3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && 0 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && 0 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && 0 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && 0 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} P4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} Q0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} Q3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && c + t <= 0 && c + t <= 0 && -1 < c + t && c + t <= 1 && -2 < c - t && -1 < c - t && c - t <= 0 && c - t <= 0 && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && c + l <= 0 && c + l <= 0 && -1 < c + l && c + l <= 1 && -2 < c - l && -1 < c - l && c - l <= 0 && c - l <= 0 && -1 < c - l && c - l <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1
}
function {:existential true} {:inline} R0(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R1(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R2(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R3(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R4(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l
}
function {:existential true} {:inline} R5(h: int, c: int, t: int, l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1
}
function {:existential true} {:inline} R_t1(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && -1 < h - new_h && h - new_h <= 0 && h - new_h <= 0 && -1 < h - new_h && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 0 && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t2(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < t && -1 < t && -2 < l && -1 < l && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && -2 < new_l && -1 < new_l && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && -2 < c - new_c && -1 < c - new_c && c - new_c <= 0 && c - new_c <= 0 && -1 < c - new_c && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && -2 < t + l && -1 < t + l && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t + new_l && -1 < t + new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l + new_l && -1 < l + new_l && l - new_l <= 0 && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l
}
function {:existential true} {:inline} R_t3(h: int, c: int, t: int, l: int, new_h: int, new_c: int, new_t: int, new_l: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < new_h && -1 < new_h && -2 < new_c && -1 < new_c && -2 < new_t && -1 < new_t && new_t <= 1 && -2 < new_l && -1 < new_l && new_l <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && -2 < h + t && -1 < h + t && -2 < h - t && -1 < h - t && -2 < h + l && -1 < h + l && -2 < h - l && -1 < h - l && -2 < h + new_h && -1 < h + new_h && -2 < h - new_h && h - new_h <= 0 && h - new_h <= 1 && -2 < h + new_c && -1 < h + new_c && -2 < h - new_c && -1 < h - new_c && h - new_c <= 1 && -2 < h + new_t && -1 < h + new_t && -2 < h - new_t && -1 < h - new_t && -2 < h + new_l && -1 < h + new_l && -2 < h - new_l && -1 < h - new_l && -2 < c + t && -1 < c + t && -2 < c - t && -1 < c - t && c - t <= 1 && -2 < c + l && -1 < c + l && -2 < c - l && -1 < c - l && c - l <= 1 && -2 < c + new_h && -1 < c + new_h && c - new_h <= 0 && c - new_h <= 1 && -2 < c + new_c && -1 < c + new_c && c - new_c <= 0 && c - new_c <= 1 && -2 < c + new_t && -1 < c + new_t && -2 < c - new_t && -1 < c - new_t && c - new_t <= 1 && -2 < c + new_l && -1 < c + new_l && -2 < c - new_l && -1 < c - new_l && c - new_l <= 1 && -2 < t + l && -1 < t + l && -2 < t - l && t - l <= 1 && -2 < t + new_h && -1 < t + new_h && t - new_h <= 0 && t - new_h <= 1 && -2 < t + new_c && -1 < t + new_c && t - new_c <= 0 && t - new_c <= 1 && -2 < t + new_t && -1 < t + new_t && -2 < t - new_t && -1 < t - new_t && t - new_t <= 0 && t - new_t <= 0 && -1 < t - new_t && t - new_t <= 1 && -2 < t + new_l && -1 < t + new_l && -2 < t - new_l && t - new_l <= 1 && -2 < l + new_h && -1 < l + new_h && l - new_h <= 0 && l - new_h <= 1 && -2 < l + new_c && -1 < l + new_c && l - new_c <= 0 && l - new_c <= 1 && -2 < l + new_t && -1 < l + new_t && -2 < l - new_t && l - new_t <= 1 && -2 < l + new_l && -1 < l + new_l && -2 < l - new_l && -1 < l - new_l && l - new_l <= 0 && l - new_l <= 0 && -1 < l - new_l && l - new_l <= 1 && -2 < new_h + new_c && -1 < new_h + new_c && -2 < new_h - new_c && -1 < new_h - new_c && -2 < new_h + new_t && -1 < new_h + new_t && -2 < new_h - new_t && -1 < new_h - new_t && -2 < new_h + new_l && -1 < new_h + new_l && -2 < new_h - new_l && -1 < new_h - new_l && -2 < new_c + new_t && -1 < new_c + new_t && -2 < new_c - new_t && -1 < new_c - new_t && -2 < new_c + new_l && -1 < new_c + new_l && -2 < new_c - new_l && -1 < new_c - new_l && -2 < new_t + new_l && -1 < new_t + new_l && -2 < new_t - new_l && new_t - new_l <= 1
}
verified

Boogie program verifier finished with 1 verified, 0 errors
