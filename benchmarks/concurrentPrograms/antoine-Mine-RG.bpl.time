[TRACE] Using prover: /home/alexander/sharedData/uni/hice-dt/Boogie/Binaries/z3.exe
Parsing /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Coalescing blocks...
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 16
#parameters: 16
Generating VC of pre_condition
Generating VC of post_condition
Generating VC of t1_transition_s3
Generating VC of t1_transition_s2
Generating VC of t1_transition_s1_entry
Generating VC of t1_transition_s1_body
Generating VC of t2_transition_s3
Generating VC of t2_transition_s2
Generating VC of t2_transition_s1_entry
Generating VC of t2_transition_s1_body
Generating VC of P0_Stable_G_t2
Generating VC of P1_Stable_G_t2
Generating VC of P2_Stable_G_t2
Generating VC of P3_Stable_G_t2
Generating VC of P4_Stable_G_t2
Generating VC of Q0_Stable_G_t1
Generating VC of Q1_Stable_G_t1
Generating VC of Q2_Stable_G_t1
Generating VC of Q3_Stable_G_t1
Generating VC of Q4_Stable_G_t1
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  true
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  true
}
Added Horn clause: 0 && 1 => 
Prover Time taken = 0.116068
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0073540
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.005426
Prover Time taken = 0.002379
Prover Time taken = 0.002218
Prover Time taken = 0.002328
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.008673
Prover Time taken = 0.007479
Prover Time taken = 0.009825
Prover Time taken = 0.007595
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.00678
Prover Time taken = 0.007564
Prover Time taken = 0.006633
Prover Time taken = 0.006978
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.008955
Prover Time taken = 0.010685
Prover Time taken = 0.005876
Prover Time taken = 0.01102
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.004708
Prover Time taken = 0.005095
Prover Time taken = 0.005703
Prover Time taken = 0.005397
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.003467
Prover Time taken = 0.003177
Prover Time taken = 0.00302
Prover Time taken = 0.003104
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.009183
Prover Time taken = 0.009083
Prover Time taken = 0.008333
Prover Time taken = 0.007758
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.007834
Prover Time taken = 0.008051
Prover Time taken = 0.01048
Prover Time taken = 0.008738
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.011416
Prover Time taken = 0.010661
Prover Time taken = 0.010358
Prover Time taken = 0.010449
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.009847
Prover Time taken = 0.008846
Prover Time taken = 0.008663
Prover Time taken = 0.008727
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.003948
Prover Time taken = 0.00467
Prover Time taken = 0.004316
Prover Time taken = 0.004022
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.006545
Prover Time taken = 0.005742
Prover Time taken = 0.005379
Prover Time taken = 0.005674
Verifying t2_transition_s1_body: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.005078
Prover Time taken = 0.003117
Prover Time taken = 0.00321
Prover Time taken = 0.002919
Verifying Q3_Stable_G_t1: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.012172
Prover Time taken = 0.009725
Prover Time taken = 0.012172
Prover Time taken = 0.009158
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.010088
Prover Time taken = 0.008581
Prover Time taken = 0.008743
Prover Time taken = 0.00852
Verifying P1_Stable_G_t2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.008252
Prover Time taken = 0.008107
Prover Time taken = 0.008104
Prover Time taken = 0.00817
Verifying P2_Stable_G_t2: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.012019
Prover Time taken = 0.011972
Prover Time taken = 0.008369
Prover Time taken = 0.007492
Verifying Q2_Stable_G_t1: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.007469
Prover Time taken = 0.00687
Prover Time taken = 0.006865
Prover Time taken = 0.006893
Verifying Q1_Stable_G_t1: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.007561
Prover Time taken = 0.009108
Prover Time taken = 0.008964
Prover Time taken = 0.009053
Verifying pre_condition: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Added: P0:0,0: positive
Prover Time taken = 0.004783
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0096130
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.008028
Added Horn clause: 2 => 3
Added Horn clause: 2 => 4
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0096850
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.002179
Prover Time taken = 0.001993
Prover Time taken = 0.002087
Prover Time taken = 0.001952
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.006774
Prover Time taken = 0.007523
Prover Time taken = 0.005896
Prover Time taken = 0.00943
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.002385
Prover Time taken = 0.002129
Prover Time taken = 0.002232
Prover Time taken = 0.002341
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.008112
Added Horn clause: 3 => 5
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0087940
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.002985
Prover Time taken = 0.003321
Prover Time taken = 0.003905
Prover Time taken = 0.004677
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.001858
Prover Time taken = 0.001689
Prover Time taken = 0.001845
Prover Time taken = 0.001843
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.006482
Prover Time taken = 0.006313
Prover Time taken = 0.005845
Prover Time taken = 0.005847
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.005923
Prover Time taken = 0.006299
Prover Time taken = 0.006273
Prover Time taken = 0.005633
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.009075
Prover Time taken = 0.008221
Prover Time taken = 0.008603
Prover Time taken = 0.007091
Verifying P1_Stable_G_t2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.008558
Prover Time taken = 0.005905
Prover Time taken = 0.005967
Prover Time taken = 0.0063
Verifying pre_condition: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Added: Q0:0,0: positive
Prover Time taken = 0.003619
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0073920
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.007194
Prover Time taken = 0.005621
Prover Time taken = 0.006628
Prover Time taken = 0.005984
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.006453
Added Horn clause: 6 => 7
Added Horn clause: 6 => 8
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0095880
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.00175
Prover Time taken = 0.001636
Prover Time taken = 0.001678
Prover Time taken = 0.002147
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.006524
Prover Time taken = 0.005839
Prover Time taken = 0.005598
Prover Time taken = 0.006856
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.004262
Prover Time taken = 0.002187
Prover Time taken = 0.002069
Prover Time taken = 0.002003
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.004428
Added Horn clause: 7 => 9
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0068990
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.003279
Prover Time taken = 0.002792
Prover Time taken = 0.002749
Prover Time taken = 0.002655
Verifying t2_transition_s1_body: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.002122
Prover Time taken = 0.001847
Prover Time taken = 0.002194
Prover Time taken = 0.002213
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.007149
Prover Time taken = 0.009113
Added Horn clause: 9 => 10
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0079560
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.002949
Prover Time taken = 0.002352
Prover Time taken = 0.002222
Prover Time taken = 0.00221
Verifying t2_transition_s1_body: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.002709
Added Horn clause: 11 => 12
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0128060
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.005712
Prover Time taken = 0.005933
Prover Time taken = 0.005644
Prover Time taken = 0.00563
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.004706
Added Horn clause: 12 => 13
Added Horn clause: 12 => 14
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0070340
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001763
Prover Time taken = 0.001732
Prover Time taken = 0.001518
Prover Time taken = 0.001755
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.005715
Prover Time taken = 0.005559
Prover Time taken = 0.008367
Prover Time taken = 0.008022
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002425
Prover Time taken = 0.002099
Prover Time taken = 0.002347
Prover Time taken = 0.001906
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.003634
Added Horn clause: 13 => 15
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0084530
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002119
Prover Time taken = 0.001915
Prover Time taken = 0.001838
Prover Time taken = 0.001937
Verifying t2_transition_s1_body: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002693
Added Horn clause: 16 => 17
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0069930
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.008668
Prover Time taken = 0.00769
Prover Time taken = 0.006962
Prover Time taken = 0.006918
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.005213
Added Horn clause: 17 => 18
Added Horn clause: 17 => 19
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0078940
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001699
Prover Time taken = 0.001444
Prover Time taken = 0.001464
Prover Time taken = 0.001771
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.005922
Prover Time taken = 0.005273
Prover Time taken = 0.005537
Prover Time taken = 0.006196
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001551
Prover Time taken = 0.001578
Prover Time taken = 0.001567
Prover Time taken = 0.001684
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.003714
Added Horn clause: 18 => 20
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0075770
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001833
Prover Time taken = 0.001883
Prover Time taken = 0.001718
Prover Time taken = 0.001745
Verifying t2_transition_s1_body: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001479
Prover Time taken = 0.001184
Prover Time taken = 0.001332
Prover Time taken = 0.001343
Verifying Q3_Stable_G_t1: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.008098
Prover Time taken = 0.008015
Prover Time taken = 0.008069
Prover Time taken = 0.011401
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.010406
Prover Time taken = 0.009283
Added Horn clause: 20 => 21
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0076440
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.005293
Prover Time taken = 0.004693
Prover Time taken = 0.004785
Prover Time taken = 0.004221
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003723
Prover Time taken = 0.004291
Prover Time taken = 0.003918
Prover Time taken = 0.003724
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003634
Prover Time taken = 0.003455
Prover Time taken = 0.0055
Prover Time taken = 0.003817
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.00324
Prover Time taken = 0.004609
Added Horn clause: 9 => 22
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0069070
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.006865
Added Horn clause: 4 && 23 => 24
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0072870
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001642
Prover Time taken = 0.00141
Prover Time taken = 0.00174
Prover Time taken = 0.001539
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.006412
Added Horn clause: 24 && 25 => 26
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0088580
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001913
Prover Time taken = 0.001481
Prover Time taken = 0.001492
Prover Time taken = 0.001446
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.005141
Prover Time taken = 0.002795
Prover Time taken = 0.002767
Prover Time taken = 0.003424
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.002056
Prover Time taken = 0.001942
Prover Time taken = 0.002035
Prover Time taken = 0.001924
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.006232
Added Horn clause: 2 && 23 => 27
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0081820
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
Prover Time taken = 0.003326
Added Horn clause: 27 => 28
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0065390
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001809
Prover Time taken = 0.001548
Prover Time taken = 0.001588
Prover Time taken = 0.001633
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y
}
Prover Time taken = 0.004496
Added Horn clause: 28 => 29
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0069810
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002495
Prover Time taken = 0.002726
Prover Time taken = 0.002692
Prover Time taken = 0.002741
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001586
Prover Time taken = 0.001615
Prover Time taken = 0.001592
Prover Time taken = 0.003812
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.006256
Added Horn clause: 27 && 25 => 30
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0095700
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.003273
Added Horn clause: 30 => 31
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0079670
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001945
Prover Time taken = 0.001447
Prover Time taken = 0.001546
Prover Time taken = 0.001773
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.004083
Added Horn clause: 31 => 32
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0071500
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002261
Prover Time taken = 0.003113
Prover Time taken = 0.002566
Prover Time taken = 0.002523
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002157
Prover Time taken = 0.001793
Prover Time taken = 0.001408
Prover Time taken = 0.0015
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.00314
Prover Time taken = 0.00297
Prover Time taken = 0.004025
Prover Time taken = 0.003106
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && y <= 1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && x + y <= 1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.006799
Added Horn clause: 5 && 33 => 34
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0077020
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002346
Prover Time taken = 0.001824
Prover Time taken = 0.001715
Prover Time taken = 0.001696
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.00124
Prover Time taken = 0.001192
Prover Time taken = 0.001217
Prover Time taken = 0.001242
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.004349
Prover Time taken = 0.00409
Prover Time taken = 0.004154
Prover Time taken = 0.004056
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.007694
Added Horn clause: 32 => 35
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0097020
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002006
Prover Time taken = 0.001664
Prover Time taken = 0.001733
Prover Time taken = 0.002085
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002648
Added Horn clause: 35 => 36
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0072440
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.004757
Added Horn clause: 36 => 37
Added Horn clause: 36 => 38
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0080260
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001635
Prover Time taken = 0.001522
Prover Time taken = 0.001346
Prover Time taken = 0.001428
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003722
Prover Time taken = 0.003065
Prover Time taken = 0.002899
Prover Time taken = 0.003695
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001548
Prover Time taken = 0.001655
Prover Time taken = 0.001597
Prover Time taken = 0.001365
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.003991
Added Horn clause: 37 => 39
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0070020
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002272
Prover Time taken = 0.001736
Prover Time taken = 0.001512
Prover Time taken = 0.001688
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001548
Prover Time taken = 0.001368
Prover Time taken = 0.001426
Prover Time taken = 0.00109
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.00376
Prover Time taken = 0.002924
Prover Time taken = 0.00294
Prover Time taken = 0.003039
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003084
Prover Time taken = 0.003044
Prover Time taken = 0.003096
Prover Time taken = 0.003249
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && x <= -1 && x <= -1 && -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && 0 < x && x <= 1 && x <= 1 && 0 < x && -2 < y && y <= -1 && y <= -1 && -2 < y && -1 < y && y <= 0 && y <= 0 && -1 < y && 0 < y && y <= 1 && y <= 1 && 0 < y && -2 < new_x && new_x <= -1 && new_x <= -1 && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && new_y <= -1 && new_y <= -1 && -2 < new_y && -1 < new_y && new_y <= 0 && new_y <= 0 && -1 < new_y && 0 < new_y && new_y <= 1 && new_y <= 1 && 0 < new_y && -2 < x + y && x + y <= -1 && x + y <= -1 && -2 < x + y && -1 < x + y && x + y <= 0 && x + y <= 0 && -1 < x + y && 0 < x + y && x + y <= 1 && x + y <= 1 && 0 < x + y && -2 < x - y && x - y <= -1 && x - y <= -1 && -2 < x - y && -1 < x - y && x - y <= 0 && x - y <= 0 && -1 < x - y && 0 < x - y && x - y <= 1 && x - y <= 1 && 0 < x - y && -2 < x + new_x && x + new_x <= -1 && x + new_x <= -1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && 0 < x - new_x && x - new_x <= 1 && x - new_x <= 1 && 0 < x - new_x && -2 < x + new_y && x + new_y <= -1 && x + new_y <= -1 && -2 < x + new_y && -1 < x + new_y && x + new_y <= 0 && x + new_y <= 0 && -1 < x + new_y && 0 < x + new_y && x + new_y <= 1 && x + new_y <= 1 && 0 < x + new_y && -2 < x - new_y && x - new_y <= -1 && x - new_y <= -1 && -2 < x - new_y && -1 < x - new_y && x - new_y <= 0 && x - new_y <= 0 && -1 < x - new_y && 0 < x - new_y && x - new_y <= 1 && x - new_y <= 1 && 0 < x - new_y && -2 < y + new_x && y + new_x <= -1 && y + new_x <= -1 && -2 < y + new_x && -1 < y + new_x && y + new_x <= 0 && y + new_x <= 0 && -1 < y + new_x && 0 < y + new_x && y + new_x <= 1 && y + new_x <= 1 && 0 < y + new_x && -2 < y - new_x && y - new_x <= -1 && y - new_x <= -1 && -2 < y - new_x && -1 < y - new_x && y - new_x <= 0 && y - new_x <= 0 && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && y + new_y <= -1 && y + new_y <= -1 && -2 < y + new_y && -1 < y + new_y && y + new_y <= 0 && y + new_y <= 0 && -1 < y + new_y && 0 < y + new_y && y + new_y <= 1 && y + new_y <= 1 && 0 < y + new_y && -2 < y - new_y && y - new_y <= -1 && y - new_y <= -1 && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && 0 < y - new_y && y - new_y <= 1 && y - new_y <= 1 && 0 < y - new_y && -2 < new_x + new_y && new_x + new_y <= -1 && new_x + new_y <= -1 && -2 < new_x + new_y && -1 < new_x + new_y && new_x + new_y <= 0 && new_x + new_y <= 0 && -1 < new_x + new_y && 0 < new_x + new_y && new_x + new_y <= 1 && new_x + new_y <= 1 && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && -1 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 0 && -1 < new_x - new_y && 0 < new_x - new_y && new_x - new_y <= 1 && new_x - new_y <= 1 && 0 < new_x - new_y
}
Prover Time taken = 0.008495
Added Horn clause: 39 => 40
Added Horn clause: 32 => 41
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0069050
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.005208
Added Horn clause: 19 && 41 => 42
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0065700
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001439
Prover Time taken = 0.001129
Prover Time taken = 0.00116
Prover Time taken = 0.001548
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.004096
Prover Time taken = 0.003236
Prover Time taken = 0.00326
Prover Time taken = 0.003265
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001578
Prover Time taken = 0.001639
Prover Time taken = 0.001418
Prover Time taken = 0.001568
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002234
Added Horn clause: 40 => 43
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0067270
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.004628
Added Horn clause: 43 => 44
Added Horn clause: 43 => 45
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0065860
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001233
Prover Time taken = 0.001153
Prover Time taken = 0.000972
Prover Time taken = 0.001056
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003303
Prover Time taken = 0.004172
Prover Time taken = 0.003836
Prover Time taken = 0.003441
Verifying t1_transition_s1_entry: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001769
Prover Time taken = 0.001715
Prover Time taken = 0.001643
Prover Time taken = 0.001789
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002111
Prover Time taken = 0.003205
Added Horn clause: 46 => 47
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0070110
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001825
Prover Time taken = 0.001564
Prover Time taken = 0.001532
Prover Time taken = 0.001535
Verifying t1_transition_s1_body: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.00112
Prover Time taken = 0.00103
Prover Time taken = 0.003199
Prover Time taken = 0.001364
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003552
Prover Time taken = 0.003929
Prover Time taken = 0.00454
Prover Time taken = 0.004123
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003856
Prover Time taken = 0.002961
Prover Time taken = 0.002839
Prover Time taken = 0.002958
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && new_x <= 1 && new_x <= 1 && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && x + new_x <= 1 && x + new_x <= 1 && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && 0 < y - new_x && y - new_x <= 1 && y - new_x <= 1 && 0 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= -1 && new_x - new_y <= -1 && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.006114
Added Horn clause: 39 => 48
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0100420
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && y - new_x <= 1 && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.00506
Added Horn clause: 42 && 48 => 49
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0076060
Verifying post_condition: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001166
Prover Time taken = 0.001428
Prover Time taken = 0.001446
Prover Time taken = 0.001391
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && y - new_x <= 1 && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003546
Prover Time taken = 0.003523
Prover Time taken = 0.002958
Prover Time taken = 0.003792
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && y - new_x <= 1 && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003871
Prover Time taken = 0.005522
Added Horn clause: 50 => 51
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0093210
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && y - new_x <= 1 && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003385
Prover Time taken = 0.002963
Prover Time taken = 0.002948
Prover Time taken = 0.002976
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && y - new_x <= 1 && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && -2 < new_x - new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003346
Prover Time taken = 0.004539
Added Horn clause: 52 => 53
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0102090
Verifying Q4_Stable_G_t1: 
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003671
Prover Time taken = 0.002934
Prover Time taken = 0.002825
Prover Time taken = 0.002794
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.005409
Prover Time taken = 0.004275
Prover Time taken = 0.003751
Prover Time taken = 0.003088
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.005185
Added Horn clause: 17 && 41 => 54
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0077670
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.004674
Added Horn clause: 54 && 48 => 55
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0073120
Verifying Q0_Stable_G_t1: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003365
Prover Time taken = 0.00332
Prover Time taken = 0.002837
Prover Time taken = 0.002991
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002749
Added Horn clause: 55 => 56
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0081570
Verifying t2_transition_s1_entry: 
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001385
Prover Time taken = 0.001347
Prover Time taken = 0.001248
Prover Time taken = 0.001258
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.003013
Added Horn clause: 57 => 58
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0073210
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.003157
Added Horn clause: 56 => 59
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0072990
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001678
Prover Time taken = 0.003674
Added Horn clause: 60 => 61
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0071370
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.002067
Prover Time taken = 0.00339
Added Horn clause: 62 => 63
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0089920
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001749
Prover Time taken = 0.003051
Added Horn clause: 64 => 65
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0069780
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001588
Prover Time taken = 0.001322
Prover Time taken = 0.001354
Prover Time taken = 0.001329
Verifying t2_transition_s1_body: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001005
Prover Time taken = 0.001104
Prover Time taken = 0.001039
Prover Time taken = 0.001181
Verifying Q3_Stable_G_t1: 
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.002932
Prover Time taken = 0.002814
Prover Time taken = 0.002714
Prover Time taken = 0.002717
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 0 && x <= 0 && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 0 && new_x <= 0 && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && x + new_x <= 0 && x + new_x <= 0 && -1 < x + new_x && x + new_x <= 1 && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003716
Prover Time taken = 0.004788
Added Horn clause: 66 => 67
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0096770
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003098
Prover Time taken = 0.00314
Prover Time taken = 0.005777
Prover Time taken = 0.003242
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003716
Prover Time taken = 0.003632
Prover Time taken = 0.00423
Prover Time taken = 0.004355
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.002822
Prover Time taken = 0.002698
Prover Time taken = 0.002652
Prover Time taken = 0.00267
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && x <= 1 && -2 < y && -1 < y && -2 < new_x && -1 < new_x && new_x <= 1 && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.002796
Prover Time taken = 0.004025
Added Horn clause: 59 => 68
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-RG.bpl
Total learner time was 00:00:00.0075420
Verifying P4_Stable_G_t2: 
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003334
Prover Time taken = 0.003088
Prover Time taken = 0.003048
Prover Time taken = 0.002976
Verifying P0_Stable_G_t2: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003683
Prover Time taken = 0.003273
Prover Time taken = 0.003994
Prover Time taken = 0.003145
Verifying P3_Stable_G_t2: 
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003031
Prover Time taken = 0.002618
Prover Time taken = 0.002603
Prover Time taken = 0.002543
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.002849
Prover Time taken = 0.002751
Prover Time taken = 0.0029
Prover Time taken = 0.003674
Verifying P1_Stable_G_t2: 
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003639
Prover Time taken = 0.003652
Prover Time taken = 0.003556
Prover Time taken = 0.003492
Verifying P2_Stable_G_t2: 
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003911
Prover Time taken = 0.003656
Prover Time taken = 0.00559
Prover Time taken = 0.003217
Verifying Q2_Stable_G_t1: 
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003166
Prover Time taken = 0.002708
Prover Time taken = 0.002762
Prover Time taken = 0.002706
Verifying Q1_Stable_G_t1: 
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
Prover Time taken = 0.003497
Prover Time taken = 0.003201
Prover Time taken = 0.004063
Prover Time taken = 0.00387
Verifying pre_condition: 
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
Prover Time taken = 0.001287
Prover Time taken = 0.000993
Prover Time taken = 0.001158
Prover Time taken = 0.001136
Prover time = 2.01
Number of prover queries = 475
Learner time = 0.38
Number of learner queries = 48
Total time: 9.52
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:53
function {:existential true} {:inline} P0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} P4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q0(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q1(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q2(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q3(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} Q4(x: int, y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1
}
function {:existential true} {:inline} G_t1(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && 0 < y && -2 < new_x && -1 < new_x && 0 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && 0 < x + y && x - y <= -1 && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && 0 < x + new_x && -2 < x - new_x && x - new_x <= -1 && x - new_x <= -1 && -2 < x - new_x && x - new_x <= 0 && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && 0 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && -2 < y - new_y && -1 < y - new_y && y - new_y <= 0 && y - new_y <= 0 && -1 < y - new_y && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= 0 && new_x - new_y <= 1
}
function {:existential true} {:inline} G_t2(x: int, y: int, new_x: int, new_y: int) : bool
{
  -2 < x && -1 < x && -2 < y && -1 < y && -2 < new_x && -1 < new_x && -2 < new_y && -1 < new_y && 0 < new_y && -2 < x + y && -1 < x + y && x - y <= 0 && x - y <= 1 && -2 < x + new_x && -1 < x + new_x && -2 < x - new_x && -1 < x - new_x && x - new_x <= 0 && x - new_x <= 0 && -1 < x - new_x && x - new_x <= 1 && -2 < x + new_y && -1 < x + new_y && 0 < x + new_y && x - new_y <= -1 && x - new_y <= 0 && x - new_y <= 1 && -2 < y + new_x && -1 < y + new_x && -2 < y - new_x && -1 < y - new_x && -2 < y + new_y && -1 < y + new_y && 0 < y + new_y && y - new_y <= -1 && y - new_y <= 0 && y - new_y <= 1 && -2 < new_x + new_y && -1 < new_x + new_y && 0 < new_x + new_y && new_x - new_y <= -1 && new_x - new_y <= 0 && new_x - new_y <= 1
}
verified

Boogie program verifier finished with 1 verified, 0 errors
