[TRACE] Using prover: /home/alexander/sharedData/uni/hice-dt/Boogie/Binaries/z3.exe
Parsing /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Coalescing blocks...
#parameters: 1
#parameters: 1
#parameters: 1
#parameters: 1
#parameters: 4
#parameters: 4
#parameters: 4
#parameters: 9
#parameters: 9
#parameters: 9
#parameters: 9
#parameters: 9
#parameters: 9
Generating VC of pre_condition
Generating VC of post_condition
Generating VC of t1_transition_s1
Generating VC of t1_transition_s2
Generating VC of t1_transition_s3
Generating VC of t2_transition_s1
Generating VC of t2_transition_s2
Generating VC of t3_transition_s1
Generating VC of t3_transition_s2
Generating VC of t3_transition_s3
Generating VC of t3_transition_s4
Generating VC of t3_transition_s5
Generating VC of R0_stable_t1_s3
Generating VC of R1_stable_t1_s3
Generating VC of R2_stable_t1_s3
Generating VC of R3_stable_t1_s3
Generating VC of R4_stable_t1_s3
Generating VC of R5_stable_t1_s3
Generating VC of R0_stable_t2_s2
Generating VC of R1_stable_t2_s2
Generating VC of R2_stable_t2_s2
Generating VC of R3_stable_t2_s2
Generating VC of R4_stable_t2_s2
Generating VC of R5_stable_t2_s2
Generating VC of Q0_stable_t1_s3
Generating VC of Q1_stable_t1_s3
Generating VC of Q2_stable_t1_s3
Generating VC of Q0_stable_t3_s3
Generating VC of Q1_stable_t3_s3
Generating VC of Q2_stable_t3_s3
Generating VC of Q0_stable_t3_s4
Generating VC of Q1_stable_t3_s4
Generating VC of Q2_stable_t3_s4
Generating VC of Q0_stable_t3_s5
Generating VC of Q1_stable_t3_s5
Generating VC of Q2_stable_t3_s5
Generating VC of P0_stable_t2_s2
Generating VC of P1_stable_t2_s2
Generating VC of P2_stable_t2_s2
Generating VC of P3_stable_t2_s2
Generating VC of P0_stable_t3_s5
Generating VC of P1_stable_t3_s5
Generating VC of P2_stable_t3_s5
Generating VC of P3_stable_t3_s5
Generating VC of P0_stable_t3_s4
Generating VC of P1_stable_t3_s4
Generating VC of P2_stable_t3_s4
Generating VC of P3_stable_t3_s4
Generating VC of P0_stable_t3_s3
Generating VC of P1_stable_t3_s3
Generating VC of P2_stable_t3_s3
Generating VC of P3_stable_t3_s3
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  true
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  true
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  true
}
Added Horn clause: 0 && 1 && 2 => 
Prover Time taken = 0.109366
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0085550
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006079
Prover Time taken = 0.003419
Prover Time taken = 0.003436
Prover Time taken = 0.003418
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002125
Prover Time taken = 0.001685
Prover Time taken = 0.00165
Prover Time taken = 0.001802
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.002938
Prover Time taken = 0.002762
Prover Time taken = 0.002769
Prover Time taken = 0.004285
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003096
Prover Time taken = 0.0039
Prover Time taken = 0.003563
Prover Time taken = 0.003242
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.002949
Prover Time taken = 0.002918
Prover Time taken = 0.003513
Prover Time taken = 0.003241
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.003705
Prover Time taken = 0.003693
Prover Time taken = 0.00264
Prover Time taken = 0.002659
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00577
Prover Time taken = 0.007231
Prover Time taken = 0.007111
Prover Time taken = 0.007125
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.007566
Prover Time taken = 0.007704
Prover Time taken = 0.007203
Prover Time taken = 0.006686
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.008103
Prover Time taken = 0.006157
Prover Time taken = 0.005701
Prover Time taken = 0.004998
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005707
Prover Time taken = 0.005968
Prover Time taken = 0.006058
Prover Time taken = 0.006045
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.007177
Prover Time taken = 0.006521
Prover Time taken = 0.007458
Prover Time taken = 0.007128
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
Prover Time taken = 0.001209
Prover Time taken = 0.001092
Prover Time taken = 0.001312
Prover Time taken = 0.001074
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
Prover Time taken = 0.001266
Prover Time taken = 0.001357
Prover Time taken = 0.001034
Prover Time taken = 0.001118
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002372
Prover Time taken = 0.001833
Prover Time taken = 0.002485
Prover Time taken = 0.00393
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003591
Prover Time taken = 0.003445
Prover Time taken = 0.003406
Prover Time taken = 0.003377
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003922
Prover Time taken = 0.00471
Prover Time taken = 0.003364
Prover Time taken = 0.004098
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003531
Prover Time taken = 0.004865
Prover Time taken = 0.003914
Prover Time taken = 0.005635
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
Prover Time taken = 0.001135
Prover Time taken = 0.000956
Prover Time taken = 0.000858
Prover Time taken = 0.000922
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005946
Prover Time taken = 0.006426
Prover Time taken = 0.006338
Prover Time taken = 0.00577
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.016458
Prover Time taken = 0.011305
Prover Time taken = 0.012298
Prover Time taken = 0.009215
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.008621
Prover Time taken = 0.009565
Prover Time taken = 0.009149
Prover Time taken = 0.008348
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.007642
Prover Time taken = 0.007611
Prover Time taken = 0.007264
Prover Time taken = 0.007956
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.008886
Prover Time taken = 0.006098
Prover Time taken = 0.006168
Prover Time taken = 0.006123
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.010033
Prover Time taken = 0.009323
Prover Time taken = 0.00832
Prover Time taken = 0.007557
Verifying R4_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005985
Prover Time taken = 0.005713
Prover Time taken = 0.006835
Prover Time taken = 0.005867
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006595
Prover Time taken = 0.006515
Prover Time taken = 0.007657
Prover Time taken = 0.008551
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005175
Prover Time taken = 0.005644
Prover Time taken = 0.005484
Prover Time taken = 0.006014
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.004264
Prover Time taken = 0.003702
Prover Time taken = 0.003586
Prover Time taken = 0.003656
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.004763
Prover Time taken = 0.003062
Prover Time taken = 0.00306
Prover Time taken = 0.002906
Verifying Q0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002965
Prover Time taken = 0.002802
Prover Time taken = 0.002786
Prover Time taken = 0.002844
Verifying Q0_stable_t3_s3: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005111
Prover Time taken = 0.005545
Prover Time taken = 0.005056
Prover Time taken = 0.005471
Verifying Q0_stable_t3_s4: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005175
Prover Time taken = 0.004593
Prover Time taken = 0.004566
Prover Time taken = 0.004583
Verifying R1_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006197
Prover Time taken = 0.006161
Prover Time taken = 0.006519
Prover Time taken = 0.00924
Verifying R1_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005197
Prover Time taken = 0.005392
Prover Time taken = 0.005838
Prover Time taken = 0.005506
Verifying R2_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006343
Prover Time taken = 0.006195
Prover Time taken = 0.007953
Prover Time taken = 0.006255
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005267
Prover Time taken = 0.005513
Prover Time taken = 0.00627
Prover Time taken = 0.005491
Verifying Q1_stable_t3_s5: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004907
Prover Time taken = 0.00785
Prover Time taken = 0.006606
Prover Time taken = 0.005598
Verifying R3_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006263
Prover Time taken = 0.00601
Prover Time taken = 0.005859
Prover Time taken = 0.005915
Verifying R3_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006714
Prover Time taken = 0.007876
Prover Time taken = 0.005928
Prover Time taken = 0.005279
Verifying Q1_stable_t3_s4: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005986
Prover Time taken = 0.004669
Prover Time taken = 0.004678
Prover Time taken = 0.004697
Verifying Q1_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.003249
Prover Time taken = 0.002612
Prover Time taken = 0.002768
Prover Time taken = 0.00282
Verifying Q1_stable_t3_s3: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005025
Prover Time taken = 0.0049
Prover Time taken = 0.004436
Prover Time taken = 0.004893
Verifying P1_stable_t2_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001872
Prover Time taken = 0.001902
Prover Time taken = 0.001782
Prover Time taken = 0.001783
Verifying P1_stable_t3_s5: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00417
Prover Time taken = 0.004
Prover Time taken = 0.005296
Prover Time taken = 0.006437
Verifying P1_stable_t3_s4: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004698
Prover Time taken = 0.004784
Prover Time taken = 0.004863
Prover Time taken = 0.00475
Verifying P1_stable_t3_s3: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003897
Prover Time taken = 0.003057
Prover Time taken = 0.003168
Prover Time taken = 0.003754
Verifying P2_stable_t2_s2: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002932
Prover Time taken = 0.002589
Prover Time taken = 0.002754
Prover Time taken = 0.002766
Verifying R2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005407
Prover Time taken = 0.005044
Prover Time taken = 0.004985
Prover Time taken = 0.004947
Verifying P2_stable_t3_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004725
Prover Time taken = 0.003391
Prover Time taken = 0.003311
Prover Time taken = 0.003293
Verifying P2_stable_t3_s5: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003521
Prover Time taken = 0.003287
Prover Time taken = 0.004731
Prover Time taken = 0.003241
Verifying P2_stable_t3_s4: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003522
Prover Time taken = 0.003357
Prover Time taken = 0.003286
Prover Time taken = 0.003298
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Added: P0:0: positive
Prover Time taken = 0.00739
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0075700
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
Prover Time taken = 0.005022
Added Horn clause: 3 => 4
Added Horn clause: 3 => 5
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0082310
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004155
Prover Time taken = 0.006721
Prover Time taken = 0.004555
Prover Time taken = 0.004416
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001641
Prover Time taken = 0.001615
Prover Time taken = 0.001714
Prover Time taken = 0.001448
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00412
Prover Time taken = 0.003918
Prover Time taken = 0.0039
Prover Time taken = 0.003911
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003703
Prover Time taken = 0.003257
Prover Time taken = 0.003238
Prover Time taken = 0.005377
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003321
Prover Time taken = 0.003149
Prover Time taken = 0.00293
Prover Time taken = 0.002879
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
Prover Time taken = 0.001067
Prover Time taken = 0.001111
Prover Time taken = 0.001148
Prover Time taken = 0.001101
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h
}
Prover Time taken = 0.002347
Added Horn clause: 4 => 6
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0080470
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002798
Prover Time taken = 0.002481
Prover Time taken = 0.002571
Prover Time taken = 0.002624
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006378
Prover Time taken = 0.00542
Prover Time taken = 0.005137
Prover Time taken = 0.005249
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
Prover Time taken = 0.001572
Prover Time taken = 0.001221
Prover Time taken = 0.001096
Prover Time taken = 0.001198
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002029
Prover Time taken = 0.001574
Prover Time taken = 0.002188
Prover Time taken = 0.003408
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003733
Prover Time taken = 0.003659
Prover Time taken = 0.003998
Prover Time taken = 0.003896
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003212
Prover Time taken = 0.003841
Prover Time taken = 0.003845
Prover Time taken = 0.003795
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003914
Prover Time taken = 0.003674
Prover Time taken = 0.00374
Prover Time taken = 0.004562
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
Prover Time taken = 0.005125
Added Horn clause: 6 => 7
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0080640
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
Prover Time taken = 0.003546
Added Horn clause: 7 => 8
Added Horn clause: 7 => 9
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0075420
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005525
Prover Time taken = 0.005392
Prover Time taken = 0.00419
Prover Time taken = 0.005162
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001583
Prover Time taken = 0.001652
Prover Time taken = 0.001525
Prover Time taken = 0.001654
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.002912
Prover Time taken = 0.002871
Prover Time taken = 0.002844
Prover Time taken = 0.002973
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003177
Prover Time taken = 0.002757
Prover Time taken = 0.00294
Prover Time taken = 0.003034
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003064
Prover Time taken = 0.003005
Prover Time taken = 0.002833
Prover Time taken = 0.002697
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
Prover Time taken = 0.000784
Prover Time taken = 0.000753
Prover Time taken = 0.000883
Prover Time taken = 0.000698
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1
}
Prover Time taken = 0.002223
Added Horn clause: 8 => 10
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0081970
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002796
Prover Time taken = 0.002517
Prover Time taken = 0.002571
Prover Time taken = 0.002476
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005105
Prover Time taken = 0.004795
Prover Time taken = 0.004553
Prover Time taken = 0.006612
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
Prover Time taken = 0.000831
Prover Time taken = 0.000789
Prover Time taken = 0.000813
Prover Time taken = 0.000984
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001882
Prover Time taken = 0.001433
Prover Time taken = 0.001562
Prover Time taken = 0.001379
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003589
Prover Time taken = 0.003656
Prover Time taken = 0.003378
Prover Time taken = 0.003406
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003615
Prover Time taken = 0.00323
Prover Time taken = 0.003305
Prover Time taken = 0.003071
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004292
Prover Time taken = 0.003418
Prover Time taken = 0.003343
Prover Time taken = 0.00342
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
Prover Time taken = 0.001934
Added Horn clause: 10 => 11
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0093770
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
Prover Time taken = 0.00368
Added Horn clause: 11 => 12
Added Horn clause: 11 => 13
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0086760
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005692
Prover Time taken = 0.003726
Prover Time taken = 0.003774
Prover Time taken = 0.003712
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001859
Prover Time taken = 0.001749
Prover Time taken = 0.001503
Prover Time taken = 0.002066
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005208
Prover Time taken = 0.002862
Prover Time taken = 0.002818
Prover Time taken = 0.002632
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.002924
Prover Time taken = 0.002829
Prover Time taken = 0.002649
Prover Time taken = 0.002733
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004052
Prover Time taken = 0.002689
Prover Time taken = 0.0039
Prover Time taken = 0.003824
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
Prover Time taken = 0.000803
Prover Time taken = 0.00107
Prover Time taken = 0.00106
Prover Time taken = 0.000921
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
Prover Time taken = 0.001069
Prover Time taken = 0.000994
Prover Time taken = 0.000955
Prover Time taken = 0.000907
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001631
Prover Time taken = 0.001468
Prover Time taken = 0.001539
Prover Time taken = 0.001842
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003911
Prover Time taken = 0.003976
Prover Time taken = 0.004055
Prover Time taken = 0.004148
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003022
Prover Time taken = 0.003069
Prover Time taken = 0.00289
Prover Time taken = 0.003252
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003744
Prover Time taken = 0.008762
Prover Time taken = 0.004055
Prover Time taken = 0.006559
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
Prover Time taken = 0.000951
Prover Time taken = 0.000706
Prover Time taken = 0.000849
Prover Time taken = 0.000917
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00703
Prover Time taken = 0.005424
Prover Time taken = 0.005474
Prover Time taken = 0.005586
Verifying R4_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006031
Prover Time taken = 0.005469
Prover Time taken = 0.007075
Prover Time taken = 0.00722
Verifying Q0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002741
Prover Time taken = 0.002555
Prover Time taken = 0.002427
Prover Time taken = 0.002607
Verifying R1_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004965
Prover Time taken = 0.005066
Prover Time taken = 0.005019
Prover Time taken = 0.00508
Verifying R3_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.007485
Prover Time taken = 0.00626
Prover Time taken = 0.005016
Prover Time taken = 0.005141
Verifying Q1_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.003309
Prover Time taken = 0.003611
Prover Time taken = 0.003327
Prover Time taken = 0.003703
Verifying P1_stable_t2_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.001936
Prover Time taken = 0.001595
Prover Time taken = 0.001496
Prover Time taken = 0.001542
Verifying P1_stable_t3_s5: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.002864
Prover Time taken = 0.004272
Prover Time taken = 0.002816
Prover Time taken = 0.002876
Verifying P1_stable_t3_s4: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003123
Prover Time taken = 0.003139
Prover Time taken = 0.003131
Prover Time taken = 0.003785
Verifying P1_stable_t3_s3: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.002781
Prover Time taken = 0.002742
Prover Time taken = 0.003191
Prover Time taken = 0.00297
Verifying P2_stable_t2_s2: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.002143
Prover Time taken = 0.002186
Prover Time taken = 0.002054
Prover Time taken = 0.002018
Verifying R2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004893
Prover Time taken = 0.005141
Prover Time taken = 0.005156
Prover Time taken = 0.005157
Verifying P2_stable_t3_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004004
Prover Time taken = 0.003791
Prover Time taken = 0.003722
Prover Time taken = 0.003674
Verifying P2_stable_t3_s5: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00329
Prover Time taken = 0.005439
Prover Time taken = 0.00349
Prover Time taken = 0.003499
Verifying P2_stable_t3_s4: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003148
Prover Time taken = 0.003091
Prover Time taken = 0.003758
Prover Time taken = 0.003701
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Added: Q0:0,0: positive
Prover Time taken = 0.006085
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0077440
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004362
Prover Time taken = 0.004064
Prover Time taken = 0.004036
Prover Time taken = 0.004
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && h <= -1 && h <= -1 && -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && 0 < h && h <= 1 && h <= 1 && 0 < h && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < h + c && h + c <= -1 && h + c <= -1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && 0 < h + c && h + c <= 1 && h + c <= 1 && 0 < h + c && -2 < h - c && h - c <= -1 && h - c <= -1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && 0 < h - c && h - c <= 1 && h - c <= 1 && 0 < h - c
}
Prover Time taken = 0.006085
Added Horn clause: 14 => 15
Added Horn clause: 14 => 16
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0090730
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00369
Prover Time taken = 0.003392
Prover Time taken = 0.004736
Prover Time taken = 0.004697
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001614
Prover Time taken = 0.001701
Prover Time taken = 0.002251
Prover Time taken = 0.001903
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.003518
Added Horn clause: 6 && 16 => 17
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0079550
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003467
Prover Time taken = 0.004092
Prover Time taken = 0.004062
Prover Time taken = 0.004467
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.003492
Added Horn clause: 10 && 17 => 18
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0093740
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003632
Prover Time taken = 0.003268
Prover Time taken = 0.004503
Prover Time taken = 0.003449
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001566
Prover Time taken = 0.001405
Prover Time taken = 0.001889
Prover Time taken = 0.001476
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003408
Prover Time taken = 0.003127
Prover Time taken = 0.003231
Prover Time taken = 0.004442
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003645
Prover Time taken = 0.003896
Prover Time taken = 0.003785
Prover Time taken = 0.003612
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003682
Prover Time taken = 0.003478
Prover Time taken = 0.003431
Prover Time taken = 0.003307
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005901
Prover Time taken = 0.005562
Prover Time taken = 0.009915
Prover Time taken = 0.006205
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001496
Prover Time taken = 0.001333
Prover Time taken = 0.001425
Prover Time taken = 0.001359
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005843
Prover Time taken = 0.005723
Prover Time taken = 0.006635
Prover Time taken = 0.005785
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006336
Prover Time taken = 0.00608
Prover Time taken = 0.006024
Prover Time taken = 0.006486
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.002095
Prover Time taken = 0.002639
Prover Time taken = 0.002347
Prover Time taken = 0.002068
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001869
Prover Time taken = 0.001853
Prover Time taken = 0.001741
Prover Time taken = 0.00161
Verifying Q0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.003523
Added Horn clause: 6 && 14 => 19
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0085610
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004271
Prover Time taken = 0.003714
Prover Time taken = 0.004755
Prover Time taken = 0.004693
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 0 && h <= 0 && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 0 && h + c <= 0 && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 0 && h - c <= 0 && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.003506
Added Horn clause: 19 => 20
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0080990
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001284
Prover Time taken = 0.001113
Prover Time taken = 0.001217
Prover Time taken = 0.001023
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006257
Prover Time taken = 0.005842
Prover Time taken = 0.005087
Prover Time taken = 0.005086
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001211
Prover Time taken = 0.001029
Prover Time taken = 0.001026
Prover Time taken = 0.001376
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005766
Prover Time taken = 0.006665
Prover Time taken = 0.005468
Prover Time taken = 0.005067
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005252
Prover Time taken = 0.005068
Prover Time taken = 0.005187
Prover Time taken = 0.00618
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001707
Prover Time taken = 0.001557
Prover Time taken = 0.001752
Prover Time taken = 0.001504
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.002581
Added Horn clause: 20 => 21
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0075240
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003469
Prover Time taken = 0.004892
Prover Time taken = 0.004597
Prover Time taken = 0.004476
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && h + c <= 1 && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.004768
Added Horn clause: 21 => 22
Added Horn clause: 21 => 23
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0079740
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003904
Prover Time taken = 0.003941
Prover Time taken = 0.004626
Prover Time taken = 0.003994
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.00115
Prover Time taken = 0.001248
Prover Time taken = 0.001107
Prover Time taken = 0.00114
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.002267
Prover Time taken = 0.001875
Prover Time taken = 0.0019
Prover Time taken = 0.004101
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003385
Prover Time taken = 0.004841
Prover Time taken = 0.003483
Prover Time taken = 0.003322
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003523
Prover Time taken = 0.003357
Prover Time taken = 0.00334
Prover Time taken = 0.003467
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003527
Prover Time taken = 0.003352
Prover Time taken = 0.003485
Prover Time taken = 0.00513
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00623
Prover Time taken = 0.005539
Prover Time taken = 0.005901
Prover Time taken = 0.007525
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001346
Prover Time taken = 0.001338
Prover Time taken = 0.001224
Prover Time taken = 0.001305
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.012495
Prover Time taken = 0.009093
Prover Time taken = 0.007913
Prover Time taken = 0.005311
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005617
Prover Time taken = 0.00626
Prover Time taken = 0.006312
Prover Time taken = 0.007595
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.002044
Prover Time taken = 0.00191
Prover Time taken = 0.001795
Prover Time taken = 0.001848
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001174
Prover Time taken = 0.001152
Prover Time taken = 0.001285
Prover Time taken = 0.001285
Verifying Q0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.003117
Added Horn clause: 10 && 21 => 24
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0091210
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003386
Prover Time taken = 0.003367
Prover Time taken = 0.003318
Prover Time taken = 0.00329
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && h <= 1 && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.003076
Added Horn clause: 24 => 25
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0071880
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001497
Prover Time taken = 0.001197
Prover Time taken = 0.000928
Prover Time taken = 0.001128
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005353
Prover Time taken = 0.005419
Prover Time taken = 0.005162
Prover Time taken = 0.005487
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001025
Prover Time taken = 0.000925
Prover Time taken = 0.001288
Prover Time taken = 0.001245
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006759
Prover Time taken = 0.005097
Prover Time taken = 0.005014
Prover Time taken = 0.004934
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005282
Prover Time taken = 0.005137
Prover Time taken = 0.005842
Prover Time taken = 0.006663
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001525
Prover Time taken = 0.001472
Prover Time taken = 0.002514
Prover Time taken = 0.00193
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.002802
Added Horn clause: 25 => 26
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0086720
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005134
Prover Time taken = 0.003388
Prover Time taken = 0.003657
Prover Time taken = 0.003543
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && c <= 1 && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.005247
Added Horn clause: 26 => 27
Added Horn clause: 26 => 28
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0097960
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00353
Prover Time taken = 0.00432
Prover Time taken = 0.00345
Prover Time taken = 0.003564
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001071
Prover Time taken = 0.000978
Prover Time taken = 0.001175
Prover Time taken = 0.00113
Verifying Q2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001496
Prover Time taken = 0.001465
Prover Time taken = 0.001593
Prover Time taken = 0.004094
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004164
Prover Time taken = 0.004832
Prover Time taken = 0.003352
Prover Time taken = 0.003378
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003415
Prover Time taken = 0.003671
Prover Time taken = 0.003546
Prover Time taken = 0.003526
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003146
Prover Time taken = 0.003001
Prover Time taken = 0.002939
Prover Time taken = 0.004798
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005195
Prover Time taken = 0.005448
Prover Time taken = 0.005531
Prover Time taken = 0.005138
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001009
Prover Time taken = 0.001057
Prover Time taken = 0.001095
Prover Time taken = 0.000945
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005854
Prover Time taken = 0.006671
Prover Time taken = 0.005106
Prover Time taken = 0.004932
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005032
Prover Time taken = 0.004964
Prover Time taken = 0.004954
Prover Time taken = 0.004984
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.001268
Prover Time taken = 0.001398
Prover Time taken = 0.001169
Prover Time taken = 0.001259
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.00131
Prover Time taken = 0.001337
Prover Time taken = 0.001712
Prover Time taken = 0.001617
Verifying Q0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.002885
Added Horn clause: 10 && 19 => 29
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0078080
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004947
Prover Time taken = 0.003388
Prover Time taken = 0.003238
Prover Time taken = 0.003252
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c && h - c <= 1
}
Prover Time taken = 0.002701
Added Horn clause: 29 => 30
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0083420
Verifying P3_stable_t2_s2: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001183
Prover Time taken = 0.000925
Prover Time taken = 0.000837
Prover Time taken = 0.00092
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005714
Prover Time taken = 0.005653
Prover Time taken = 0.005561
Prover Time taken = 0.005599
Verifying P0_stable_t2_s2: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001149
Prover Time taken = 0.00117
Prover Time taken = 0.001344
Prover Time taken = 0.001253
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.007438
Prover Time taken = 0.005073
Prover Time taken = 0.005029
Prover Time taken = 0.005256
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005381
Prover Time taken = 0.005567
Prover Time taken = 0.00691
Prover Time taken = 0.006148
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.002957
Prover Time taken = 0.002086
Prover Time taken = 0.001618
Prover Time taken = 0.00204
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001677
Prover Time taken = 0.00168
Prover Time taken = 0.001174
Prover Time taken = 0.001196
Verifying Q0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.002193
Prover Time taken = 0.001469
Prover Time taken = 0.00144
Prover Time taken = 0.002004
Verifying Q0_stable_t3_s3: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004098
Prover Time taken = 0.00375
Prover Time taken = 0.004228
Prover Time taken = 0.003832
Verifying Q0_stable_t3_s4: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004409
Prover Time taken = 0.004228
Prover Time taken = 0.004244
Prover Time taken = 0.004208
Verifying R1_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006769
Prover Time taken = 0.005401
Prover Time taken = 0.005191
Prover Time taken = 0.005319
Verifying R2_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.00574
Prover Time taken = 0.006421
Prover Time taken = 0.005506
Prover Time taken = 0.006519
Verifying Q1_stable_t3_s5: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.004102
Prover Time taken = 0.004081
Prover Time taken = 0.004059
Prover Time taken = 0.003477
Verifying R3_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.007969
Prover Time taken = 0.005384
Prover Time taken = 0.005365
Prover Time taken = 0.005434
Verifying Q1_stable_t3_s4: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.005579
Prover Time taken = 0.003412
Prover Time taken = 0.00342
Prover Time taken = 0.003459
Verifying Q1_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001413
Prover Time taken = 0.001464
Prover Time taken = 0.001391
Prover Time taken = 0.001457
Verifying Q1_stable_t3_s3: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.003546
Prover Time taken = 0.004093
Prover Time taken = 0.003477
Prover Time taken = 0.003215
Verifying P1_stable_t2_s2: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001023
Prover Time taken = 0.000924
Prover Time taken = 0.001104
Prover Time taken = 0.000956
Verifying P2_stable_t2_s2: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
Prover Time taken = 0.001377
Prover Time taken = 0.001268
Prover Time taken = 0.001176
Prover Time taken = 0.001545
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Added: R0:0,0,0: positive
Prover Time taken = 0.004896
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0104340
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.004279
Prover Time taken = 0.003548
Prover Time taken = 0.00349
Prover Time taken = 0.003537
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.013032
Added Horn clause: 31 => 32
Added Horn clause: 31 => 33
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0097910
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002986
Prover Time taken = 0.002768
Prover Time taken = 0.002643
Prover Time taken = 0.003854
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.004775
Prover Time taken = 0.00456
Prover Time taken = 0.004624
Prover Time taken = 0.004685
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.006634
Added Horn clause: 20 && 33 => 34
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0084730
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002648
Prover Time taken = 0.002906
Prover Time taken = 0.00242
Prover Time taken = 0.002543
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003249
Prover Time taken = 0.003058
Prover Time taken = 0.003583
Prover Time taken = 0.003295
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.008192
Added Horn clause: 30 && 33 => 35
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0086100
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002528
Prover Time taken = 0.002569
Prover Time taken = 0.00275
Prover Time taken = 0.002662
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003358
Prover Time taken = 0.002389
Prover Time taken = 0.003171
Prover Time taken = 0.003157
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00366
Prover Time taken = 0.003346
Prover Time taken = 0.002913
Prover Time taken = 0.003057
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.004671
Prover Time taken = 0.004381
Prover Time taken = 0.004928
Prover Time taken = 0.004577
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.009469
Added Horn clause: 32 => 36
Added Horn clause: 32 => 37
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0099190
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002588
Prover Time taken = 0.00237
Prover Time taken = 0.002482
Prover Time taken = 0.00307
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002302
Prover Time taken = 0.002347
Prover Time taken = 0.002257
Prover Time taken = 0.002625
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.003456
Prover Time taken = 0.003252
Prover Time taken = 0.003323
Prover Time taken = 0.003399
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002747
Prover Time taken = 0.002475
Prover Time taken = 0.00347
Prover Time taken = 0.002912
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.007736
Prover Time taken = 0.002529
Prover Time taken = 0.002116
Prover Time taken = 0.002058
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002912
Prover Time taken = 0.002132
Prover Time taken = 0.002076
Prover Time taken = 0.00208
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.009145
Prover Time taken = 0.006621
Prover Time taken = 0.00449
Prover Time taken = 0.004574
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && t <= -1 && t <= -1 && -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && 0 < t && t <= 1 && t <= 1 && 0 < t && -2 < l && l <= -1 && l <= -1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && 0 < l && l <= 1 && l <= 1 && 0 < l && -2 < c && c <= -1 && c <= -1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && 0 < c && c <= 1 && c <= 1 && 0 < c && -2 < t + l && t + l <= -1 && t + l <= -1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && 0 < t + l && t + l <= 1 && t + l <= 1 && 0 < t + l && -2 < t - l && t - l <= -1 && t - l <= -1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && 0 < t - l && t - l <= 1 && t - l <= 1 && 0 < t - l && -2 < t + c && t + c <= -1 && t + c <= -1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && 0 < t + c && t + c <= 1 && t + c <= 1 && 0 < t + c && -2 < t - c && t - c <= -1 && t - c <= -1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && 0 < t - c && t - c <= 1 && t - c <= 1 && 0 < t - c && -2 < l + c && l + c <= -1 && l + c <= -1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && 0 < l + c && l + c <= 1 && l + c <= 1 && 0 < l + c && -2 < l - c && l - c <= -1 && l - c <= -1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && 0 < l - c && l - c <= 1 && l - c <= 1 && 0 < l - c
}
Prover Time taken = 0.006483
Added Horn clause: 37 => 38
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0072450
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002603
Prover Time taken = 0.002413
Prover Time taken = 0.002631
Prover Time taken = 0.002389
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.005055
Prover Time taken = 0.00281
Prover Time taken = 0.003562
Prover Time taken = 0.004093
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.002661
Prover Time taken = 0.003277
Prover Time taken = 0.002502
Prover Time taken = 0.002258
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.005189
Prover Time taken = 0.004236
Prover Time taken = 0.00395
Prover Time taken = 0.00404
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.00481
Prover Time taken = 0.00439
Prover Time taken = 0.004383
Prover Time taken = 0.00438
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.007093
Added Horn clause: 30 && 31 => 39
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0075250
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003394
Prover Time taken = 0.002558
Prover Time taken = 0.002578
Prover Time taken = 0.002569
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.005859
Added Horn clause: 40 => 41
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0092610
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.008859
Added Horn clause: 39 => 42
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0080060
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003388
Prover Time taken = 0.003845
Prover Time taken = 0.003244
Prover Time taken = 0.003174
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.009481
Added Horn clause: 41 => 43
Added Horn clause: 41 => 44
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0064960
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002839
Prover Time taken = 0.002597
Prover Time taken = 0.002402
Prover Time taken = 0.001964
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001964
Prover Time taken = 0.002323
Prover Time taken = 0.00251
Prover Time taken = 0.002287
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003188
Prover Time taken = 0.003651
Prover Time taken = 0.00249
Prover Time taken = 0.002384
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002379
Prover Time taken = 0.002389
Prover Time taken = 0.002328
Prover Time taken = 0.002286
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002639
Prover Time taken = 0.002596
Prover Time taken = 0.002477
Prover Time taken = 0.002524
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.0025
Prover Time taken = 0.002409
Prover Time taken = 0.002351
Prover Time taken = 0.002305
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 1 && -2 < t - c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.006079
Added Horn clause: 42 => 45
Added Horn clause: 42 => 46
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0067040
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002544
Prover Time taken = 0.002002
Prover Time taken = 0.001891
Prover Time taken = 0.002368
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002115
Prover Time taken = 0.001743
Prover Time taken = 0.002017
Prover Time taken = 0.002651
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002218
Prover Time taken = 0.00252
Prover Time taken = 0.003355
Prover Time taken = 0.00483
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00284
Prover Time taken = 0.002417
Prover Time taken = 0.002272
Prover Time taken = 0.002513
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002499
Prover Time taken = 0.001884
Prover Time taken = 0.001855
Prover Time taken = 0.001901
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001789
Prover Time taken = 0.001932
Prover Time taken = 0.001742
Prover Time taken = 0.001684
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003196
Prover Time taken = 0.003032
Prover Time taken = 0.003088
Prover Time taken = 0.003076
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 0 && c <= 0 && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t + c <= 0 && t + c <= 0 && -1 < t + c && t + c <= 1 && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 0 && l + c <= 0 && -1 < l + c && l + c <= 1 && -2 < l - c && -1 < l - c && l - c <= 0 && l - c <= 0 && -1 < l - c && l - c <= 1
}
Prover Time taken = 0.006681
Added Horn clause: 44 => 47
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0075180
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002357
Prover Time taken = 0.001942
Prover Time taken = 0.001746
Prover Time taken = 0.00224
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002295
Prover Time taken = 0.002432
Prover Time taken = 0.002311
Prover Time taken = 0.002125
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002111
Prover Time taken = 0.001941
Prover Time taken = 0.002013
Prover Time taken = 0.002931
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && c <= 1 && -2 < t + l && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l + c <= 1 && -2 < l - c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.005125
Added Horn clause: 46 => 48
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0072020
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002296
Prover Time taken = 0.002046
Prover Time taken = 0.003576
Prover Time taken = 0.001671
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002244
Prover Time taken = 0.001913
Prover Time taken = 0.002131
Prover Time taken = 0.001928
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001797
Prover Time taken = 0.002097
Prover Time taken = 0.0022
Prover Time taken = 0.002033
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003692
Prover Time taken = 0.003623
Prover Time taken = 0.003552
Prover Time taken = 0.003698
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.004064
Added Horn clause: 47 => 49
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0072240
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002349
Prover Time taken = 0.003014
Prover Time taken = 0.002772
Prover Time taken = 0.002872
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.009234
Added Horn clause: 49 => 50
Added Horn clause: 49 => 51
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0083340
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002154
Prover Time taken = 0.002163
Prover Time taken = 0.001924
Prover Time taken = 0.002096
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002766
Prover Time taken = 0.002179
Prover Time taken = 0.002258
Prover Time taken = 0.00292
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003699
Prover Time taken = 0.003946
Prover Time taken = 0.005286
Prover Time taken = 0.00323
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00271
Prover Time taken = 0.004796
Prover Time taken = 0.003896
Prover Time taken = 0.003469
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 0 && t <= 0 && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t + l <= 0 && t + l <= 0 && -1 < t + l && t + l <= 1 && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.008142
Added Horn clause: 50 => 52
Added Horn clause: 50 => 53
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0083110
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002188
Prover Time taken = 0.002011
Prover Time taken = 0.001725
Prover Time taken = 0.001699
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001791
Prover Time taken = 0.001552
Prover Time taken = 0.00158
Prover Time taken = 0.001611
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002033
Prover Time taken = 0.002389
Prover Time taken = 0.001998
Prover Time taken = 0.002585
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002811
Prover Time taken = 0.004098
Prover Time taken = 0.003254
Prover Time taken = 0.003327
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002369
Prover Time taken = 0.002033
Prover Time taken = 0.002319
Prover Time taken = 0.002078
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002168
Prover Time taken = 0.001996
Prover Time taken = 0.002063
Prover Time taken = 0.00166
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002809
Prover Time taken = 0.002719
Prover Time taken = 0.002908
Prover Time taken = 0.00335
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 0 && l <= 0 && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.005031
Added Horn clause: 53 => 54
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0081350
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002205
Prover Time taken = 0.001693
Prover Time taken = 0.00152
Prover Time taken = 0.001779
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002283
Prover Time taken = 0.002561
Prover Time taken = 0.002535
Prover Time taken = 0.005308
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001602
Prover Time taken = 0.002091
Prover Time taken = 0.00192
Prover Time taken = 0.001868
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003506
Prover Time taken = 0.003184
Prover Time taken = 0.003515
Prover Time taken = 0.003051
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.004413
Added Horn clause: 48 => 55
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0065960
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002547
Prover Time taken = 0.002244
Prover Time taken = 0.002068
Prover Time taken = 0.002279
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.006205
Added Horn clause: 55 => 56
Added Horn clause: 55 => 57
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0094940
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00219
Prover Time taken = 0.002943
Prover Time taken = 0.002931
Prover Time taken = 0.001859
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002479
Prover Time taken = 0.002607
Prover Time taken = 0.002412
Prover Time taken = 0.002201
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002735
Prover Time taken = 0.002561
Prover Time taken = 0.002811
Prover Time taken = 0.002724
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002573
Prover Time taken = 0.002665
Prover Time taken = 0.002729
Prover Time taken = 0.002652
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && t <= 1 && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.006556
Added Horn clause: 56 => 58
Added Horn clause: 56 => 59
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0073820
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001968
Prover Time taken = 0.001741
Prover Time taken = 0.001947
Prover Time taken = 0.001662
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001664
Prover Time taken = 0.001447
Prover Time taken = 0.001462
Prover Time taken = 0.001543
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002116
Prover Time taken = 0.001927
Prover Time taken = 0.001817
Prover Time taken = 0.002098
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00273
Prover Time taken = 0.003282
Prover Time taken = 0.002231
Prover Time taken = 0.002098
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002155
Prover Time taken = 0.001912
Prover Time taken = 0.002085
Prover Time taken = 0.001988
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001975
Prover Time taken = 0.001464
Prover Time taken = 0.001651
Prover Time taken = 0.001621
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003342
Prover Time taken = 0.00283
Prover Time taken = 0.0037
Prover Time taken = 0.002649
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && l <= 1 && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.005064
Added Horn clause: 59 => 60
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0068510
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002311
Prover Time taken = 0.001916
Prover Time taken = 0.002335
Prover Time taken = 0.001596
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002191
Prover Time taken = 0.001909
Prover Time taken = 0.002403
Prover Time taken = 0.002117
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002203
Prover Time taken = 0.001761
Prover Time taken = 0.001901
Prover Time taken = 0.001699
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002733
Prover Time taken = 0.002443
Prover Time taken = 0.002642
Prover Time taken = 0.002526
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002009
Prover Time taken = 0.002072
Prover Time taken = 0.003683
Prover Time taken = 0.0018
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002846
Prover Time taken = 0.002522
Prover Time taken = 0.002863
Prover Time taken = 0.002458
Verifying R4_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002738
Prover Time taken = 0.001953
Prover Time taken = 0.002211
Prover Time taken = 0.002011
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && -2 < t - c && -1 < t - c && t - c <= 0 && t - c <= 0 && -1 < t - c && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.004963
Added Horn clause: 30 && 38 => 61
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0074420
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001664
Prover Time taken = 0.001334
Prover Time taken = 0.001447
Prover Time taken = 0.001492
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001958
Prover Time taken = 0.001797
Prover Time taken = 0.001866
Prover Time taken = 0.001803
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001748
Prover Time taken = 0.001439
Prover Time taken = 0.003222
Prover Time taken = 0.001409
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002917
Prover Time taken = 0.003576
Prover Time taken = 0.002955
Prover Time taken = 0.002202
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00419
Added Horn clause: 61 => 62
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0072430
Verifying R0_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002164
Prover Time taken = 0.002247
Prover Time taken = 0.002462
Prover Time taken = 0.002028
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.005298
Added Horn clause: 62 => 63
Added Horn clause: 62 => 64
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0068530
Verifying post_condition: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003038
Prover Time taken = 0.001856
Prover Time taken = 0.002282
Prover Time taken = 0.00267
Verifying R5_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.005142
Prover Time taken = 0.002442
Prover Time taken = 0.002347
Prover Time taken = 0.002364
Verifying R5_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002995
Prover Time taken = 0.003053
Prover Time taken = 0.002879
Prover Time taken = 0.002959
Verifying t3_transition_s1: 
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003189
Prover Time taken = 0.002459
Prover Time taken = 0.002836
Prover Time taken = 0.00292
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && t - l <= 0 && t - l <= 0 && -1 < t - l && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.006285
Added Horn clause: 63 => 65
Added Horn clause: 63 => 66
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0070480
Verifying P3_stable_t3_s4: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002281
Prover Time taken = 0.002022
Prover Time taken = 0.001955
Prover Time taken = 0.002378
Verifying P3_stable_t3_s3: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001444
Prover Time taken = 0.001552
Prover Time taken = 0.001487
Prover Time taken = 0.001583
Verifying Q2_stable_t3_s3: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001881
Prover Time taken = 0.001847
Prover Time taken = 0.001807
Prover Time taken = 0.002093
Verifying Q2_stable_t3_s4: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002071
Prover Time taken = 0.001877
Prover Time taken = 0.002725
Prover Time taken = 0.002294
Verifying P0_stable_t3_s4: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001913
Prover Time taken = 0.001406
Prover Time taken = 0.001677
Prover Time taken = 0.001521
Verifying P0_stable_t3_s3: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00163
Prover Time taken = 0.001444
Prover Time taken = 0.001474
Prover Time taken = 0.001497
Verifying t3_transition_s2: 
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002559
Prover Time taken = 0.002192
Prover Time taken = 0.002111
Prover Time taken = 0.002267
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t - l && -1 < t - l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00444
Added Horn clause: 66 => 67
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/antoine-Mine-three-threads-OG.bpl
Total learner time was 00:00:00.0083070
Verifying P3_stable_t3_s5: 
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001516
Prover Time taken = 0.001446
Prover Time taken = 0.00322
Prover Time taken = 0.001567
Verifying Q2_stable_t3_s5: 
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001986
Prover Time taken = 0.001675
Prover Time taken = 0.00186
Prover Time taken = 0.00179
Verifying P0_stable_t3_s5: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001415
Prover Time taken = 0.001505
Prover Time taken = 0.001525
Prover Time taken = 0.001282
Verifying t3_transition_s4: 
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003068
Prover Time taken = 0.003349
Prover Time taken = 0.002258
Prover Time taken = 0.002108
Verifying t3_transition_s5: 
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00165
Prover Time taken = 0.001829
Prover Time taken = 0.001566
Prover Time taken = 0.002069
Verifying R0_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002491
Prover Time taken = 0.002396
Prover Time taken = 0.00288
Prover Time taken = 0.002838
Verifying R4_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002269
Prover Time taken = 0.001881
Prover Time taken = 0.001692
Prover Time taken = 0.001882
Verifying R4_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.003004
Prover Time taken = 0.002607
Prover Time taken = 0.004191
Prover Time taken = 0.003824
Verifying Q0_stable_t3_s5: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002446
Prover Time taken = 0.002398
Prover Time taken = 0.002622
Prover Time taken = 0.002433
Verifying Q0_stable_t3_s3: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00254
Prover Time taken = 0.002289
Prover Time taken = 0.001941
Prover Time taken = 0.001634
Verifying Q0_stable_t3_s4: 
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.00194
Prover Time taken = 0.001792
Prover Time taken = 0.001997
Prover Time taken = 0.001715
Verifying R1_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002308
Prover Time taken = 0.002858
Prover Time taken = 0.003007
Prover Time taken = 0.00284
Verifying R1_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002002
Prover Time taken = 0.001836
Prover Time taken = 0.001786
Prover Time taken = 0.001809
Verifying R2_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002485
Prover Time taken = 0.002262
Prover Time taken = 0.002343
Prover Time taken = 0.00223
Verifying t3_transition_s3: 
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001653
Prover Time taken = 0.001726
Prover Time taken = 0.001595
Prover Time taken = 0.00169
Verifying Q1_stable_t3_s5: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001627
Prover Time taken = 0.002093
Prover Time taken = 0.001708
Prover Time taken = 0.001488
Verifying R3_stable_t2_s2: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002308
Prover Time taken = 0.002183
Prover Time taken = 0.003064
Prover Time taken = 0.003101
Verifying R3_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001936
Prover Time taken = 0.001745
Prover Time taken = 0.002127
Prover Time taken = 0.001827
Verifying Q1_stable_t3_s4: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001838
Prover Time taken = 0.002013
Prover Time taken = 0.001778
Prover Time taken = 0.001753
Verifying Q1_stable_t3_s3: 
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002371
Prover Time taken = 0.002027
Prover Time taken = 0.002201
Prover Time taken = 0.002169
Verifying P1_stable_t3_s5: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001594
Prover Time taken = 0.001584
Prover Time taken = 0.001544
Prover Time taken = 0.001655
Verifying P1_stable_t3_s4: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001798
Prover Time taken = 0.001976
Prover Time taken = 0.002448
Prover Time taken = 0.001818
Verifying P1_stable_t3_s3: 
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001691
Prover Time taken = 0.00156
Prover Time taken = 0.002139
Prover Time taken = 0.001442
Verifying R2_stable_t1_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.002117
Prover Time taken = 0.001789
Prover Time taken = 0.00197
Prover Time taken = 0.00203
Verifying P2_stable_t3_s3: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001441
Prover Time taken = 0.001952
Prover Time taken = 0.0017
Prover Time taken = 0.001871
Verifying P2_stable_t3_s5: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.0013
Prover Time taken = 0.001372
Prover Time taken = 0.001222
Prover Time taken = 0.001829
Verifying P2_stable_t3_s4: 
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001486
Prover Time taken = 0.00154
Prover Time taken = 0.001343
Prover Time taken = 0.001498
Verifying pre_condition: 
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
Prover Time taken = 0.001482
Prover Time taken = 0.001405
Prover Time taken = 0.001356
Prover Time taken = 0.001551
Prover time = 4.32
Number of prover queries = 1253
Learner time = 0.40
Number of learner queries = 49
Total time: 17.10
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:62
function {:existential true} {:inline} P0(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P1(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} P2(h: int) : bool
{
  -2 < h && -1 < h && h <= 1
}
function {:existential true} {:inline} P3(h: int) : bool
{
  -2 < h && -1 < h
}
function {:existential true} {:inline} Q0(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q1(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} Q2(h: int, c: int) : bool
{
  -2 < h && -1 < h && -2 < c && -1 < c && -2 < h + c && -1 < h + c && -2 < h - c && -1 < h - c
}
function {:existential true} {:inline} R0(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R1(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R2(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R3(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R4(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
function {:existential true} {:inline} R5(t: int, l: int, c: int) : bool
{
  -2 < t && -1 < t && -2 < l && -1 < l && -2 < c && -1 < c && -2 < t + l && -1 < t + l && t - l <= 0 && t - l <= 1 && -2 < t + c && -1 < t + c && t - c <= 0 && t - c <= 1 && -2 < l + c && -1 < l + c && l - c <= 0 && l - c <= 1
}
verified

Boogie program verifier finished with 1 verified, 0 errors
