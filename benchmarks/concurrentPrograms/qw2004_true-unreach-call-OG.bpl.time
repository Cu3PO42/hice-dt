[TRACE] Using prover: /home/alexander/sharedData/uni/hice-dt/Boogie/Binaries/z3.exe
Parsing /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Coalescing blocks...
#parameters: 4
#parameters: 1
#parameters: 1
#parameters: 1
#parameters: 1
#parameters: 1
#parameters: 9
#parameters: 16
#parameters: 4
#parameters: 1
#parameters: 1
#parameters: 1
#parameters: 1
Generating VC of pre_condition
Generating VC of assert_at_Q2
Generating VC of t1_transition_s1
Generating VC of t1_transition_s2
Generating VC of t1_transition_s3
Generating VC of t1_transition_s4
Generating VC of t1_transition_s5
Generating VC of t2_transition_s1
Generating VC of t2_transition_s2
Generating VC of t2_transition_s3
Generating VC of t2_transition_s4
Generating VC of t2_transition_s5
Generating VC of t2_transition_s6
Generating VC of P0_stable_t2_s1
Generating VC of P0_stable_t2_s3
Generating VC of P0_stable_t2_s5
Generating VC of P1_stable_t2_s1
Generating VC of P1_stable_t2_s3
Generating VC of P1_stable_t2_s5
Generating VC of P2_stable_t2_s1
Generating VC of P2_stable_t2_s3
Generating VC of P2_stable_t2_s5
Generating VC of P3_stable_t2_s1
Generating VC of P3_stable_t2_s3
Generating VC of P3_stable_t2_s5
Generating VC of P4_stable_t2_s1
Generating VC of P4_stable_t2_s3
Generating VC of P4_stable_t2_s5
Generating VC of P5_stable_t2_s1
Generating VC of P5_stable_t2_s3
Generating VC of P5_stable_t2_s5
Generating VC of Q0_stable_t1_s1
Generating VC of Q0_stable_t1_s2
Generating VC of Q0_stable_t1_s4
Generating VC of Q0_stable_t1_s5
Generating VC of Q1_stable_t1_s1
Generating VC of Q1_stable_t1_s2
Generating VC of Q1_stable_t1_s4
Generating VC of Q1_stable_t1_s5
Generating VC of Q2_stable_t1_s1
Generating VC of Q2_stable_t1_s2
Generating VC of Q2_stable_t1_s4
Generating VC of Q2_stable_t1_s5
Generating VC of Q3_stable_t1_s1
Generating VC of Q3_stable_t1_s2
Generating VC of Q3_stable_t1_s4
Generating VC of Q3_stable_t1_s5
Generating VC of Q4_stable_t1_s1
Generating VC of Q4_stable_t1_s2
Generating VC of Q4_stable_t1_s4
Generating VC of Q4_stable_t1_s5
Generating VC of Q5_stable_t1_s1
Generating VC of Q5_stable_t1_s2
Generating VC of Q5_stable_t1_s4
Generating VC of Q5_stable_t1_s5
Generating VC of Q6_stable_t1_s1
Generating VC of Q6_stable_t1_s2
Generating VC of Q6_stable_t1_s4
Generating VC of Q6_stable_t1_s5
Verifying Q6_stable_t1_s1: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  true
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  true
}
Prover Time taken = 0.01353
Prover Time taken = 0.000599
Prover Time taken = 0.000709
Prover Time taken = 0.000566
Verifying Q6_stable_t1_s2: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  true
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  true
}
Prover Time taken = 0.00048
Prover Time taken = 0.00061
Prover Time taken = 0.000577
Prover Time taken = 0.001089
Verifying Q6_stable_t1_s4: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  true
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  true
}
Prover Time taken = 0.000521
Prover Time taken = 0.000454
Prover Time taken = 0.000579
Prover Time taken = 0.000543
Verifying Q6_stable_t1_s5: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  true
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  true
}
Prover Time taken = 0.000537
Prover Time taken = 0.000367
Prover Time taken = 0.000369
Prover Time taken = 0.000434
Verifying P5_stable_t2_s1: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  true
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  true
}
Prover Time taken = 0.00072
Prover Time taken = 0.000532
Prover Time taken = 0.000533
Prover Time taken = 0.002933
Verifying P5_stable_t2_s3: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  true
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  true
}
Prover Time taken = 0.000522
Prover Time taken = 0.000391
Prover Time taken = 0.000367
Prover Time taken = 0.000443
Verifying P5_stable_t2_s5: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  true
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  true
}
Prover Time taken = 0.000659
Prover Time taken = 0.000684
Prover Time taken = 0.000605
Prover Time taken = 0.000523
Verifying t2_transition_s6: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  true
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  true
}
Prover Time taken = 0.000557
Prover Time taken = 0.00053
Prover Time taken = 0.000554
Prover Time taken = 0.000443
Verifying t1_transition_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  true
}
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  true
}
Prover Time taken = 0.000574
Prover Time taken = 0.000662
Prover Time taken = 0.000571
Prover Time taken = 0.000517
Verifying assert_at_Q2: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  true
}
Added: Q2:1,2: negative
Prover Time taken = 0.10202
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0067130
Verifying Q6_stable_t1_s1: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.004872
Prover Time taken = 0.001906
Prover Time taken = 0.001984
Prover Time taken = 0.001769
Verifying Q6_stable_t1_s2: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001723
Prover Time taken = 0.00121
Prover Time taken = 0.000979
Prover Time taken = 0.001061
Verifying Q6_stable_t1_s4: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001325
Prover Time taken = 0.001258
Prover Time taken = 0.001087
Prover Time taken = 0.003437
Verifying Q6_stable_t1_s5: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001091
Prover Time taken = 0.000968
Prover Time taken = 0.001057
Prover Time taken = 0.001345
Verifying P5_stable_t2_s1: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.005121
Prover Time taken = 0.003828
Prover Time taken = 0.003636
Prover Time taken = 0.004224
Verifying P5_stable_t2_s3: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001085
Prover Time taken = 0.001403
Prover Time taken = 0.00106
Prover Time taken = 0.000982
Verifying P5_stable_t2_s5: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001471
Prover Time taken = 0.001386
Prover Time taken = 0.001439
Prover Time taken = 0.001787
Verifying t2_transition_s6: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001244
Prover Time taken = 0.000874
Prover Time taken = 0.000764
Prover Time taken = 0.001081
Verifying t1_transition_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.000943
Prover Time taken = 0.000863
Prover Time taken = 0.001048
Prover Time taken = 0.00105
Verifying assert_at_Q2: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.00152
Prover Time taken = 0.001412
Prover Time taken = 0.002575
Prover Time taken = 0.002016
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.011694
Prover Time taken = 0.007901
Prover Time taken = 0.010827
Prover Time taken = 0.00936
Verifying t2_transition_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.00105
Prover Time taken = 0.00093
Prover Time taken = 0.001006
Prover Time taken = 0.001228
Verifying t2_transition_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001388
Prover Time taken = 0.00209
Prover Time taken = 0.001884
Prover Time taken = 0.001816
Verifying P0_stable_t2_s5: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.007195
Prover Time taken = 0.002971
Prover Time taken = 0.004485
Prover Time taken = 0.003345
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.002111
Prover Time taken = 0.002242
Prover Time taken = 0.001802
Prover Time taken = 0.002279
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001176
Prover Time taken = 0.00112
Prover Time taken = 0.001501
Prover Time taken = 0.001264
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001781
Prover Time taken = 0.001192
Prover Time taken = 0.00111
Prover Time taken = 0.001099
Verifying P4_stable_t2_s1: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.004111
Prover Time taken = 0.003873
Prover Time taken = 0.006981
Prover Time taken = 0.005354
Verifying P4_stable_t2_s3: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001333
Prover Time taken = 0.001194
Prover Time taken = 0.003127
Prover Time taken = 0.001205
Verifying P4_stable_t2_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001163
Prover Time taken = 0.001177
Prover Time taken = 0.001597
Prover Time taken = 0.001165
Verifying Q0_stable_t1_s5: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.009701
Prover Time taken = 0.008764
Prover Time taken = 0.008656
Prover Time taken = 0.008523
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.013086
Prover Time taken = 0.012543
Prover Time taken = 0.012455
Prover Time taken = 0.012332
Verifying Q1_stable_t1_s1: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.013662
Prover Time taken = 0.016768
Prover Time taken = 0.013234
Prover Time taken = 0.013501
Verifying Q1_stable_t1_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.012352
Prover Time taken = 0.013039
Prover Time taken = 0.015802
Prover Time taken = 0.012566
Verifying Q1_stable_t1_s4: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.014458
Prover Time taken = 0.012107
Prover Time taken = 0.015284
Prover Time taken = 0.014137
Verifying Q1_stable_t1_s5: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.014419
Prover Time taken = 0.014954
Prover Time taken = 0.013897
Prover Time taken = 0.015104
Verifying P0_stable_t2_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.007957
Prover Time taken = 0.007771
Prover Time taken = 0.006538
Prover Time taken = 0.006687
Verifying P0_stable_t2_s3: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.003688
Prover Time taken = 0.003625
Prover Time taken = 0.004709
Prover Time taken = 0.004022
Verifying Q0_stable_t1_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.00777
Prover Time taken = 0.007847
Prover Time taken = 0.007765
Prover Time taken = 0.00792
Verifying P1_stable_t2_s1: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.003999
Prover Time taken = 0.004633
Prover Time taken = 0.005047
Prover Time taken = 0.004088
Verifying P1_stable_t2_s3: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001245
Prover Time taken = 0.001172
Prover Time taken = 0.001668
Prover Time taken = 0.001635
Verifying P1_stable_t2_s5: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001195
Prover Time taken = 0.001218
Prover Time taken = 0.001631
Prover Time taken = 0.00123
Verifying Q0_stable_t1_s2: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.009153
Prover Time taken = 0.008925
Prover Time taken = 0.009961
Prover Time taken = 0.007051
Verifying P2_stable_t2_s1: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.004375
Prover Time taken = 0.003876
Prover Time taken = 0.003876
Prover Time taken = 0.003884
Verifying P2_stable_t2_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001288
Prover Time taken = 0.001211
Prover Time taken = 0.001188
Prover Time taken = 0.001185
Verifying P2_stable_t2_s5: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.002434
Prover Time taken = 0.001155
Prover Time taken = 0.001318
Prover Time taken = 0.001426
Verifying P3_stable_t2_s1: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.004162
Prover Time taken = 0.003938
Prover Time taken = 0.003737
Prover Time taken = 0.004145
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.000935
Prover Time taken = 0.000847
Prover Time taken = 0.000819
Prover Time taken = 0.000828
Verifying Q2_stable_t1_s5: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.003131
Prover Time taken = 0.003278
Prover Time taken = 0.004112
Prover Time taken = 0.00309
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001777
Prover Time taken = 0.00181
Prover Time taken = 0.001916
Prover Time taken = 0.001722
Verifying P3_stable_t2_s3: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.002678
Prover Time taken = 0.001203
Prover Time taken = 0.001135
Prover Time taken = 0.001115
Verifying P3_stable_t2_s5: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001132
Prover Time taken = 0.001113
Prover Time taken = 0.001225
Prover Time taken = 0.001081
Verifying Q0_stable_t1_s4: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.014946
Prover Time taken = 0.009341
Prover Time taken = 0.008225
Prover Time taken = 0.005887
Verifying Q2_stable_t1_s4: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.004027
Prover Time taken = 0.003081
Prover Time taken = 0.002742
Prover Time taken = 0.002799
Verifying Q2_stable_t1_s1: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.003768
Prover Time taken = 0.003611
Prover Time taken = 0.003645
Prover Time taken = 0.003765
Verifying Q2_stable_t1_s2: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.002999
Prover Time taken = 0.004043
Prover Time taken = 0.004438
Prover Time taken = 0.003289
Verifying Q3_stable_t1_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001109
Prover Time taken = 0.001208
Prover Time taken = 0.001165
Prover Time taken = 0.001049
Verifying Q3_stable_t1_s1: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.002246
Prover Time taken = 0.001962
Prover Time taken = 0.002054
Prover Time taken = 0.001994
Verifying Q3_stable_t1_s2: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001466
Prover Time taken = 0.001499
Prover Time taken = 0.001634
Prover Time taken = 0.00117
Verifying Q3_stable_t1_s5: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001215
Prover Time taken = 0.001153
Prover Time taken = 0.001211
Prover Time taken = 0.00113
Verifying Q4_stable_t1_s4: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001648
Prover Time taken = 0.001352
Prover Time taken = 0.001007
Prover Time taken = 0.001014
Verifying Q4_stable_t1_s1: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.002037
Prover Time taken = 0.002346
Prover Time taken = 0.002011
Prover Time taken = 0.002986
Verifying Q4_stable_t1_s2: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001188
Prover Time taken = 0.001039
Prover Time taken = 0.001061
Prover Time taken = 0.001148
Verifying Q4_stable_t1_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001171
Prover Time taken = 0.001032
Prover Time taken = 0.00116
Prover Time taken = 0.00111
Verifying Q5_stable_t1_s4: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001306
Prover Time taken = 0.001643
Prover Time taken = 0.001003
Prover Time taken = 0.001007
Verifying Q5_stable_t1_s1: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.002071
Prover Time taken = 0.002019
Prover Time taken = 0.002042
Prover Time taken = 0.001945
Verifying Q5_stable_t1_s2: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001162
Prover Time taken = 0.001117
Prover Time taken = 0.001213
Prover Time taken = 0.001094
Verifying Q5_stable_t1_s5: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001123
Prover Time taken = 0.001101
Prover Time taken = 0.001137
Prover Time taken = 0.001122
Verifying pre_condition: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Added: P0:0,0: positive
Prover Time taken = 0.007267
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0062150
Verifying Q6_stable_t1_s1: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001702
Prover Time taken = 0.001658
Prover Time taken = 0.001529
Prover Time taken = 0.001564
Verifying P0_stable_t2_s5: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.002039
Prover Time taken = 0.001929
Prover Time taken = 0.001835
Prover Time taken = 0.002109
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.006093
Added Horn clause: 1 => 2
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0074650
Verifying Q6_stable_t1_s2: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001518
Prover Time taken = 0.001417
Prover Time taken = 0.001165
Prover Time taken = 0.00108
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001938
Prover Time taken = 0.001923
Prover Time taken = 0.001805
Prover Time taken = 0.001823
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.003408
Added Horn clause: 2 => 3
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0069160
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001318
Prover Time taken = 0.001112
Prover Time taken = 0.001066
Prover Time taken = 0.001072
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.004432
Added Horn clause: 3 => 4
Added Horn clause: 3 => 5
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0071650
Verifying Q6_stable_t1_s4: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001401
Prover Time taken = 0.001131
Prover Time taken = 0.001126
Prover Time taken = 0.00106
Verifying Q6_stable_t1_s5: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.00124
Prover Time taken = 0.00158
Prover Time taken = 0.001342
Prover Time taken = 0.001263
Verifying t1_transition_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.000998
Prover Time taken = 0.000924
Prover Time taken = 0.000894
Prover Time taken = 0.001043
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001028
Prover Time taken = 0.000947
Prover Time taken = 0.001043
Prover Time taken = 0.001146
Verifying P4_stable_t2_s1: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.004483
Prover Time taken = 0.003923
Prover Time taken = 0.00381
Prover Time taken = 0.003548
Verifying P4_stable_t2_s3: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001376
Prover Time taken = 0.001088
Prover Time taken = 0.001742
Prover Time taken = 0.00138
Verifying P4_stable_t2_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.002819
Prover Time taken = 0.001185
Prover Time taken = 0.001041
Prover Time taken = 0.001053
Verifying Q0_stable_t1_s5: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.008095
Prover Time taken = 0.00791
Prover Time taken = 0.006235
Prover Time taken = 0.005821
Verifying Q1_stable_t1_s1: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.012871
Prover Time taken = 0.011243
Prover Time taken = 0.010527
Prover Time taken = 0.010241
Verifying Q1_stable_t1_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.010215
Prover Time taken = 0.012191
Prover Time taken = 0.00998
Prover Time taken = 0.009854
Verifying Q1_stable_t1_s4: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.01466
Prover Time taken = 0.011068
Prover Time taken = 0.013005
Prover Time taken = 0.01087
Verifying Q1_stable_t1_s5: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.009834
Prover Time taken = 0.009665
Prover Time taken = 0.011438
Prover Time taken = 0.010136
Verifying P0_stable_t2_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.004721
Prover Time taken = 0.004353
Prover Time taken = 0.004134
Prover Time taken = 0.00403
Verifying P0_stable_t2_s3: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.00178
Prover Time taken = 0.001729
Prover Time taken = 0.002407
Prover Time taken = 0.002269
Verifying Q0_stable_t1_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.007545
Prover Time taken = 0.00581
Prover Time taken = 0.005846
Prover Time taken = 0.005928
Verifying P1_stable_t2_s1: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.003308
Prover Time taken = 0.004247
Prover Time taken = 0.00377
Prover Time taken = 0.004213
Verifying P1_stable_t2_s3: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001166
Prover Time taken = 0.001149
Prover Time taken = 0.001103
Prover Time taken = 0.00128
Verifying P1_stable_t2_s5: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001205
Prover Time taken = 0.000881
Prover Time taken = 0.00094
Prover Time taken = 0.001174
Verifying Q0_stable_t1_s2: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.005857
Prover Time taken = 0.00573
Prover Time taken = 0.00599
Prover Time taken = 0.006634
Verifying P2_stable_t2_s1: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.003473
Prover Time taken = 0.00322
Prover Time taken = 0.003336
Prover Time taken = 0.003051
Verifying P2_stable_t2_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001478
Prover Time taken = 0.001257
Prover Time taken = 0.00123
Prover Time taken = 0.00129
Verifying P2_stable_t2_s5: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.000948
Prover Time taken = 0.000976
Prover Time taken = 0.001081
Prover Time taken = 0.001212
Verifying P3_stable_t2_s1: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.005043
Prover Time taken = 0.004559
Prover Time taken = 0.003971
Prover Time taken = 0.003499
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.003356
Added Horn clause: 4 => 6
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0059310
Verifying Q6_stable_t1_s5: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001066
Prover Time taken = 0.001408
Prover Time taken = 0.001068
Prover Time taken = 0.000909
Verifying t1_transition_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.001916
Added Horn clause: 6 => 7
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0064940
Verifying P5_stable_t2_s1: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.003623
Prover Time taken = 0.00421
Prover Time taken = 0.003532
Prover Time taken = 0.003778
Verifying P5_stable_t2_s3: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001052
Prover Time taken = 0.000994
Prover Time taken = 0.001033
Prover Time taken = 0.001028
Verifying P5_stable_t2_s5: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001115
Prover Time taken = 0.001062
Prover Time taken = 0.001021
Prover Time taken = 0.001457
Verifying t1_transition_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
Prover Time taken = 0.000761
Prover Time taken = 0.000692
Prover Time taken = 0.000727
Prover Time taken = 0.000986
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001065
Prover Time taken = 0.0014
Prover Time taken = 0.001839
Prover Time taken = 0.001663
Verifying P4_stable_t2_s1: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.004378
Prover Time taken = 0.003284
Prover Time taken = 0.003977
Prover Time taken = 0.004059
Verifying P4_stable_t2_s3: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.000967
Prover Time taken = 0.001001
Prover Time taken = 0.001198
Prover Time taken = 0.000815
Verifying P4_stable_t2_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001431
Prover Time taken = 0.001183
Prover Time taken = 0.00108
Prover Time taken = 0.000966
Verifying Q0_stable_t1_s5: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.005942
Prover Time taken = 0.00622
Prover Time taken = 0.005796
Prover Time taken = 0.005672
Verifying Q1_stable_t1_s5: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.012671
Prover Time taken = 0.010587
Prover Time taken = 0.009911
Prover Time taken = 0.016252
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000727
Prover Time taken = 0.00056
Prover Time taken = 0.000651
Prover Time taken = 0.000757
Verifying Q2_stable_t1_s5: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.007634
Prover Time taken = 0.00553
Prover Time taken = 0.002675
Prover Time taken = 0.00281
Verifying P3_stable_t2_s3: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.000976
Prover Time taken = 0.000895
Prover Time taken = 0.000898
Prover Time taken = 0.000909
Verifying P3_stable_t2_s5: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.001035
Prover Time taken = 0.001107
Prover Time taken = 0.001049
Prover Time taken = 0.001241
Verifying Q0_stable_t1_s4: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.006801
Prover Time taken = 0.005317
Prover Time taken = 0.005795
Prover Time taken = 0.006575
Verifying Q2_stable_t1_s4: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.002725
Prover Time taken = 0.003762
Prover Time taken = 0.002999
Prover Time taken = 0.003252
Verifying Q2_stable_t1_s1: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.003026
Prover Time taken = 0.003117
Prover Time taken = 0.00286
Prover Time taken = 0.003192
Verifying Q2_stable_t1_s2: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.003247
Prover Time taken = 0.002625
Prover Time taken = 0.002611
Prover Time taken = 0.002528
Verifying Q3_stable_t1_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000958
Prover Time taken = 0.000943
Prover Time taken = 0.000943
Prover Time taken = 0.000982
Verifying Q3_stable_t1_s1: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001603
Prover Time taken = 0.001408
Prover Time taken = 0.001603
Prover Time taken = 0.002008
Verifying Q3_stable_t1_s2: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.00137
Prover Time taken = 0.001313
Prover Time taken = 0.002176
Prover Time taken = 0.001372
Verifying Q3_stable_t1_s5: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001283
Prover Time taken = 0.001199
Prover Time taken = 0.001125
Prover Time taken = 0.00119
Verifying Q4_stable_t1_s4: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001017
Prover Time taken = 0.001031
Prover Time taken = 0.001005
Prover Time taken = 0.001028
Verifying Q4_stable_t1_s1: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.002485
Prover Time taken = 0.001484
Prover Time taken = 0.001667
Prover Time taken = 0.001522
Verifying Q4_stable_t1_s2: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001067
Prover Time taken = 0.001049
Prover Time taken = 0.001568
Prover Time taken = 0.00135
Verifying Q4_stable_t1_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001023
Prover Time taken = 0.000981
Prover Time taken = 0.001298
Prover Time taken = 0.000901
Verifying Q5_stable_t1_s4: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000955
Prover Time taken = 0.000984
Prover Time taken = 0.001192
Prover Time taken = 0.001293
Verifying Q5_stable_t1_s1: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001484
Prover Time taken = 0.001481
Prover Time taken = 0.001755
Prover Time taken = 0.001449
Verifying Q5_stable_t1_s2: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001063
Prover Time taken = 0.001034
Prover Time taken = 0.001091
Prover Time taken = 0.001205
Verifying Q5_stable_t1_s5: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.0018
Prover Time taken = 0.000957
Prover Time taken = 0.001223
Prover Time taken = 0.001011
Verifying pre_condition: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Added: Q0:0,0,0: positive
Prover Time taken = 0.007026
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0063760
Verifying P5_stable_t2_s1: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.003323
Prover Time taken = 0.003814
Prover Time taken = 0.00341
Prover Time taken = 0.003473
Verifying P4_stable_t2_s1: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.003098
Prover Time taken = 0.003408
Prover Time taken = 0.004313
Prover Time taken = 0.004131
Verifying Q0_stable_t1_s5: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.003628
Prover Time taken = 0.005139
Prover Time taken = 0.005076
Prover Time taken = 0.004968
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= -1 && status <= -1 && -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && 0 < status && status <= 1 && status <= 1 && 0 < status && -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingFlag && stoppingFlag <= -1 && stoppingFlag <= -1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && 0 < stoppingFlag && stoppingFlag <= 1 && stoppingFlag <= 1 && 0 < stoppingFlag && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < status + stopped && status + stopped <= -1 && status + stopped <= -1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && 0 < status + stopped && status + stopped <= 1 && status + stopped <= 1 && 0 < status + stopped && -2 < status - stopped && status - stopped <= -1 && status - stopped <= -1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && 0 < status - stopped && status - stopped <= 1 && status - stopped <= 1 && 0 < status - stopped && -2 < status + stoppingFlag && status + stoppingFlag <= -1 && status + stoppingFlag <= -1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && 0 < status + stoppingFlag && status + stoppingFlag <= 1 && status + stoppingFlag <= 1 && 0 < status + stoppingFlag && -2 < status - stoppingFlag && status - stoppingFlag <= -1 && status - stoppingFlag <= -1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && 0 < status - stoppingFlag && status - stoppingFlag <= 1 && status - stoppingFlag <= 1 && 0 < status - stoppingFlag && -2 < status + stoppingEvent && status + stoppingEvent <= -1 && status + stoppingEvent <= -1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && 0 < status + stoppingEvent && status + stoppingEvent <= 1 && status + stoppingEvent <= 1 && 0 < status + stoppingEvent && -2 < status - stoppingEvent && status - stoppingEvent <= -1 && status - stoppingEvent <= -1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && 0 < status - stoppingEvent && status - stoppingEvent <= 1 && status - stoppingEvent <= 1 && 0 < status - stoppingEvent && -2 < stopped + stoppingFlag && stopped + stoppingFlag <= -1 && stopped + stoppingFlag <= -1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && 0 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && stopped + stoppingFlag <= 1 && 0 < stopped + stoppingFlag && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= -1 && stopped - stoppingFlag <= -1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && 0 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && stopped - stoppingFlag <= 1 && 0 < stopped - stoppingFlag && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent && -2 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= -1 && stoppingFlag + stoppingEvent <= -1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && 0 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && stoppingFlag + stoppingEvent <= 1 && 0 < stoppingFlag + stoppingEvent && -2 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= -1 && stoppingFlag - stoppingEvent <= -1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && 0 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1 && stoppingFlag - stoppingEvent <= 1 && 0 < stoppingFlag - stoppingEvent
}
Prover Time taken = 0.009425
Added Horn clause: 8 => 9
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0067020
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped && -2 < stoppingEvent && stoppingEvent <= -1 && stoppingEvent <= -1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent && -2 < stopped + stoppingEvent && stopped + stoppingEvent <= -1 && stopped + stoppingEvent <= -1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && 0 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && stopped + stoppingEvent <= 1 && 0 < stopped + stoppingEvent && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= -1 && stopped - stoppingEvent <= -1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && 0 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && stopped - stoppingEvent <= 1 && 0 < stopped - stoppingEvent
}
Prover Time taken = 0.010244
Added Horn clause: 9 => 10
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0072190
Verifying assert_at_Q2: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.002189
Prover Time taken = 0.001282
Prover Time taken = 0.00126
Prover Time taken = 0.001408
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.005001
Prover Time taken = 0.005117
Prover Time taken = 0.006008
Prover Time taken = 0.005866
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.007386
Prover Time taken = 0.007042
Prover Time taken = 0.008815
Prover Time taken = 0.006849
Verifying Q1_stable_t1_s1: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 0 && status + stoppingFlag <= 0 && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && -1 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 0 && -1 < status - stoppingFlag && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.008225
Added Horn clause: 9 && 1 => 11
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0071700
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.00451
Prover Time taken = 0.005028
Prover Time taken = 0.005453
Prover Time taken = 0.004404
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.007343
Prover Time taken = 0.006942
Prover Time taken = 0.007099
Prover Time taken = 0.008494
Verifying Q1_stable_t1_s1: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.00584
Prover Time taken = 0.005916
Prover Time taken = 0.005734
Prover Time taken = 0.005449
Verifying Q1_stable_t1_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.00531
Prover Time taken = 0.00497
Prover Time taken = 0.008084
Prover Time taken = 0.006553
Verifying Q1_stable_t1_s4: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.00463
Prover Time taken = 0.00451
Prover Time taken = 0.004177
Prover Time taken = 0.004362
Verifying Q1_stable_t1_s5: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.005229
Prover Time taken = 0.004474
Prover Time taken = 0.004277
Prover Time taken = 0.004455
Verifying P0_stable_t2_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.005158
Prover Time taken = 0.00374
Prover Time taken = 0.003407
Prover Time taken = 0.004913
Verifying Q0_stable_t1_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 0 && stoppingFlag <= 0 && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 0 && stopped + stoppingFlag <= 0 && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 0 && -1 < stopped - stoppingFlag && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 0 && stoppingFlag + stoppingEvent <= 0 && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 0 && stoppingFlag - stoppingEvent <= 0 && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.007095
Added Horn clause: 8 && 1 => 12
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0065970
Verifying P5_stable_t2_s1: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.003206
Prover Time taken = 0.002817
Prover Time taken = 0.002767
Prover Time taken = 0.002868
Verifying P4_stable_t2_s1: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.003767
Prover Time taken = 0.002855
Prover Time taken = 0.002857
Prover Time taken = 0.002677
Verifying Q0_stable_t1_s5: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.006253
Prover Time taken = 0.003664
Prover Time taken = 0.003649
Prover Time taken = 0.004133
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && -1 < status && status <= 0 && status <= 0 && -1 < status && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && -1 < status + stopped && status + stopped <= 0 && status + stopped <= 0 && -1 < status + stopped && status + stopped <= 1 && -2 < status - stopped && -1 < status - stopped && status - stopped <= 0 && status - stopped <= 0 && -1 < status - stopped && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && -2 < status - stoppingFlag && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && -1 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 0 && -1 < status + stoppingEvent && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && -1 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 0 && -1 < status - stoppingEvent && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.008035
Added Horn clause: 12 => 13
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0049120
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.006358
Added Horn clause: 13 => 14
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0071230
Verifying P5_stable_t2_s3: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001745
Prover Time taken = 0.001531
Prover Time taken = 0.00176
Prover Time taken = 0.001551
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.007872
Prover Time taken = 0.004992
Prover Time taken = 0.004594
Prover Time taken = 0.005286
Verifying t2_transition_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.002951
Added Horn clause: 14 => 15
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0086200
Verifying t2_transition_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001204
Prover Time taken = 0.001042
Prover Time taken = 0.001022
Prover Time taken = 0.000964
Verifying t2_transition_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && stopped <= -1 && stopped <= -1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && 0 < stopped && stopped <= 1 && stopped <= 1 && 0 < stopped
}
Prover Time taken = 0.004805
Added Horn clause: 15 => 16
Added Horn clause: 15 => 17
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0059800
Verifying Q6_stable_t1_s1: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001848
Prover Time taken = 0.00216
Prover Time taken = 0.00281
Prover Time taken = 0.002314
Verifying Q6_stable_t1_s2: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001628
Prover Time taken = 0.001393
Prover Time taken = 0.001367
Prover Time taken = 0.001766
Verifying Q6_stable_t1_s4: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001177
Prover Time taken = 0.001005
Prover Time taken = 0.001046
Prover Time taken = 0.001033
Verifying Q6_stable_t1_s5: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.002501
Added Horn clause: 17 && 6 => 18
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0055330
Verifying Q6_stable_t1_s1: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.002134
Prover Time taken = 0.001715
Prover Time taken = 0.00151
Prover Time taken = 0.001466
Verifying Q6_stable_t1_s2: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001039
Prover Time taken = 0.001061
Prover Time taken = 0.00093
Prover Time taken = 0.000868
Verifying Q6_stable_t1_s4: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000992
Prover Time taken = 0.00092
Prover Time taken = 0.001434
Prover Time taken = 0.001483
Verifying Q6_stable_t1_s5: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000976
Prover Time taken = 0.000731
Prover Time taken = 0.000689
Prover Time taken = 0.000956
Verifying P5_stable_t2_s5: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001131
Prover Time taken = 0.001007
Prover Time taken = 0.000961
Prover Time taken = 0.001147
Verifying t2_transition_s6: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000994
Prover Time taken = 0.000886
Prover Time taken = 0.001021
Prover Time taken = 0.000858
Verifying t2_transition_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001089
Prover Time taken = 0.001006
Prover Time taken = 0.000978
Prover Time taken = 0.001055
Verifying P0_stable_t2_s5: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.003497
Added Horn clause: 1 && 16 => 19
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0062820
Verifying Q6_stable_t1_s1: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001347
Prover Time taken = 0.001255
Prover Time taken = 0.001317
Prover Time taken = 0.001173
Verifying P0_stable_t2_s5: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001718
Prover Time taken = 0.002187
Prover Time taken = 0.001547
Prover Time taken = 0.001614
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.002876
Added Horn clause: 19 => 20
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0068160
Verifying Q6_stable_t1_s2: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001573
Prover Time taken = 0.001296
Prover Time taken = 0.001108
Prover Time taken = 0.001116
Verifying t1_transition_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001412
Prover Time taken = 0.001741
Prover Time taken = 0.001263
Prover Time taken = 0.0013
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.002648
Added Horn clause: 20 => 21
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0053270
Verifying t1_transition_s2: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001042
Prover Time taken = 0.001001
Prover Time taken = 0.000818
Prover Time taken = 0.000791
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.002772
Added Horn clause: 21 => 22
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0084690
Verifying Q6_stable_t1_s4: 
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001109
Prover Time taken = 0.001135
Prover Time taken = 0.001117
Prover Time taken = 0.001125
Verifying t1_transition_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001134
Prover Time taken = 0.00114
Prover Time taken = 0.001037
Prover Time taken = 0.001144
Verifying P4_stable_t2_s3: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001237
Prover Time taken = 0.001085
Prover Time taken = 0.001022
Prover Time taken = 0.001028
Verifying P4_stable_t2_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000825
Prover Time taken = 0.000765
Prover Time taken = 0.000798
Prover Time taken = 0.000752
Verifying t2_transition_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.005021
Prover Time taken = 0.004506
Prover Time taken = 0.005311
Prover Time taken = 0.004813
Verifying Q1_stable_t1_s1: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.00683
Prover Time taken = 0.006603
Prover Time taken = 0.006216
Prover Time taken = 0.006578
Verifying Q1_stable_t1_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.004648
Prover Time taken = 0.005124
Prover Time taken = 0.007067
Prover Time taken = 0.006034
Verifying Q1_stable_t1_s4: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.004126
Prover Time taken = 0.00371
Prover Time taken = 0.003883
Prover Time taken = 0.003814
Verifying Q1_stable_t1_s5: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.00409
Prover Time taken = 0.003768
Prover Time taken = 0.004059
Prover Time taken = 0.004479
Verifying P0_stable_t2_s1: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.002997
Prover Time taken = 0.003865
Prover Time taken = 0.003679
Prover Time taken = 0.003747
Verifying P0_stable_t2_s3: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.004045
Prover Time taken = 0.001688
Prover Time taken = 0.00154
Prover Time taken = 0.001698
Verifying Q0_stable_t1_s1: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.003748
Prover Time taken = 0.003473
Prover Time taken = 0.003704
Prover Time taken = 0.003675
Verifying P1_stable_t2_s1: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.002334
Prover Time taken = 0.002229
Prover Time taken = 0.002175
Prover Time taken = 0.002207
Verifying P1_stable_t2_s3: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001016
Prover Time taken = 0.000952
Prover Time taken = 0.001144
Prover Time taken = 0.00103
Verifying P1_stable_t2_s5: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000778
Prover Time taken = 0.000763
Prover Time taken = 0.00083
Prover Time taken = 0.000903
Verifying Q0_stable_t1_s2: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.003693
Prover Time taken = 0.00317
Prover Time taken = 0.002954
Prover Time taken = 0.003492
Verifying P2_stable_t2_s1: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.002741
Prover Time taken = 0.003303
Prover Time taken = 0.002218
Prover Time taken = 0.002377
Verifying P2_stable_t2_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001135
Prover Time taken = 0.001302
Prover Time taken = 0.0012
Prover Time taken = 0.001192
Verifying P2_stable_t2_s5: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000971
Prover Time taken = 0.000751
Prover Time taken = 0.000731
Prover Time taken = 0.00075
Verifying P3_stable_t2_s1: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.002275
Prover Time taken = 0.002392
Prover Time taken = 0.002139
Prover Time taken = 0.002153
Verifying t1_transition_s4: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000599
Prover Time taken = 0.000541
Prover Time taken = 0.00062
Prover Time taken = 0.000613
Verifying Q2_stable_t1_s5: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001877
Prover Time taken = 0.002001
Prover Time taken = 0.002477
Prover Time taken = 0.002345
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001495
Prover Time taken = 0.001403
Prover Time taken = 0.001613
Prover Time taken = 0.001924
Verifying P3_stable_t2_s3: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001083
Prover Time taken = 0.001014
Prover Time taken = 0.000897
Prover Time taken = 0.000967
Verifying P3_stable_t2_s5: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000817
Prover Time taken = 0.000708
Prover Time taken = 0.00072
Prover Time taken = 0.00077
Verifying Q0_stable_t1_s4: 
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.004451
Prover Time taken = 0.002635
Prover Time taken = 0.003241
Prover Time taken = 0.003298
Verifying Q2_stable_t1_s4: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001932
Prover Time taken = 0.001726
Prover Time taken = 0.00179
Prover Time taken = 0.001809
Verifying Q2_stable_t1_s1: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.002414
Prover Time taken = 0.002255
Prover Time taken = 0.002308
Prover Time taken = 0.002345
Verifying Q2_stable_t1_s2: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.002083
Prover Time taken = 0.00201
Prover Time taken = 0.001979
Prover Time taken = 0.002025
Verifying Q3_stable_t1_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000998
Prover Time taken = 0.00132
Prover Time taken = 0.001173
Prover Time taken = 0.001138
Verifying Q3_stable_t1_s1: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001407
Prover Time taken = 0.001455
Prover Time taken = 0.001885
Prover Time taken = 0.001388
Verifying Q3_stable_t1_s2: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.001445
Prover Time taken = 0.001389
Prover Time taken = 0.00142
Prover Time taken = 0.001486
Verifying Q3_stable_t1_s5: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.003476
Added Horn clause: 14 && 6 => 23
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0069810
Verifying P5_stable_t2_s3: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001442
Prover Time taken = 0.001333
Prover Time taken = 0.001393
Prover Time taken = 0.001264
Verifying t2_transition_s2: 
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.005565
Prover Time taken = 0.004952
Prover Time taken = 0.005798
Prover Time taken = 0.005454
Verifying t2_transition_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.002845
Added Horn clause: 23 => 24
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0074250
Verifying t2_transition_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000901
Prover Time taken = 0.000901
Prover Time taken = 0.001158
Prover Time taken = 0.001005
Verifying t2_transition_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.002638
Added Horn clause: 24 => 25
Calling ../Boogie/Binaries/hice-dt -b -h /home/alexander/sharedData/uni/hice-dt/benchmarks/concurrentPrograms/qw2004_true-unreach-call-OG.bpl
Total learner time was 00:00:00.0060950
Verifying P5_stable_t2_s5: 
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001054
Prover Time taken = 0.001248
Prover Time taken = 0.00096
Prover Time taken = 0.000838
Verifying t2_transition_s6: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000933
Prover Time taken = 0.000659
Prover Time taken = 0.000611
Prover Time taken = 0.000607
Verifying t2_transition_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001518
Prover Time taken = 0.00105
Prover Time taken = 0.001194
Prover Time taken = 0.001086
Verifying P0_stable_t2_s5: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001979
Prover Time taken = 0.0016
Prover Time taken = 0.001573
Prover Time taken = 0.002119
Verifying P4_stable_t2_s3: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000956
Prover Time taken = 0.00095
Prover Time taken = 0.00098
Prover Time taken = 0.000943
Verifying P4_stable_t2_s5: 
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000966
Prover Time taken = 0.00087
Prover Time taken = 0.00086
Prover Time taken = 0.00076
Verifying P0_stable_t2_s3: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001607
Prover Time taken = 0.001612
Prover Time taken = 0.001814
Prover Time taken = 0.002039
Verifying P1_stable_t2_s3: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001133
Prover Time taken = 0.001177
Prover Time taken = 0.00105
Prover Time taken = 0.001001
Verifying P1_stable_t2_s5: 
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000907
Prover Time taken = 0.000834
Prover Time taken = 0.000834
Prover Time taken = 0.000868
Verifying P2_stable_t2_s3: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001047
Prover Time taken = 0.001011
Prover Time taken = 0.001032
Prover Time taken = 0.001106
Verifying P2_stable_t2_s5: 
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.00114
Prover Time taken = 0.000701
Prover Time taken = 0.000614
Prover Time taken = 0.000657
Verifying t2_transition_s3: 
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001817
Prover Time taken = 0.001694
Prover Time taken = 0.001937
Prover Time taken = 0.001743
Verifying P3_stable_t2_s3: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.001032
Prover Time taken = 0.000956
Prover Time taken = 0.000924
Prover Time taken = 0.001064
Verifying P3_stable_t2_s5: 
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
Prover Time taken = 0.000864
Prover Time taken = 0.000872
Prover Time taken = 0.000823
Prover Time taken = 0.000809
Verifying Q3_stable_t1_s4: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000941
Prover Time taken = 0.002205
Prover Time taken = 0.000938
Prover Time taken = 0.001017
Verifying Q3_stable_t1_s1: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001224
Prover Time taken = 0.001157
Prover Time taken = 0.001212
Prover Time taken = 0.001442
Verifying Q3_stable_t1_s2: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000904
Prover Time taken = 0.00106
Prover Time taken = 0.000975
Prover Time taken = 0.000796
Verifying Q3_stable_t1_s5: 
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000929
Prover Time taken = 0.000684
Prover Time taken = 0.000626
Prover Time taken = 0.000712
Verifying Q4_stable_t1_s4: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000824
Prover Time taken = 0.000755
Prover Time taken = 0.00071
Prover Time taken = 0.000744
Verifying Q4_stable_t1_s1: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001177
Prover Time taken = 0.001262
Prover Time taken = 0.001597
Prover Time taken = 0.001087
Verifying Q4_stable_t1_s2: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.0011
Prover Time taken = 0.000926
Prover Time taken = 0.001035
Prover Time taken = 0.001126
Verifying Q4_stable_t1_s5: 
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000804
Prover Time taken = 0.00085
Prover Time taken = 0.000804
Prover Time taken = 0.000795
Verifying Q5_stable_t1_s4: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.00092
Prover Time taken = 0.000886
Prover Time taken = 0.000865
Prover Time taken = 0.00087
Verifying Q5_stable_t1_s1: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
Prover Time taken = 0.001549
Prover Time taken = 0.001385
Prover Time taken = 0.001431
Prover Time taken = 0.001365
Verifying Q5_stable_t1_s2: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.000992
Prover Time taken = 0.00096
Prover Time taken = 0.001033
Prover Time taken = 0.000942
Verifying Q5_stable_t1_s5: 
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
Prover Time taken = 0.0008
Prover Time taken = 0.000828
Prover Time taken = 0.000826
Prover Time taken = 0.000855
Verifying pre_condition: 
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
Prover Time taken = 0.002679
Prover Time taken = 0.003906
Prover Time taken = 0.002112
Prover Time taken = 0.002647
Prover time = 2.68
Number of prover queries = 912
Learner time = 0.16
Number of learner queries = 24
Total time: 9.34
Number of positive examples:2
Number of negative examples:1
Number of Horn clauses:23
function {:existential true} {:inline} P0(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} P1(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P2(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P3(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P4(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 1
}
function {:existential true} {:inline} P5(stoppingEvent: int) : bool
{
  -2 < stoppingEvent && -1 < stoppingEvent && 0 < stoppingEvent && stoppingEvent <= 1 && stoppingEvent <= 1 && 0 < stoppingEvent
}
function {:existential true} {:inline} Q0(stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q1(status: int, stopped: int, stoppingFlag: int, stoppingEvent: int) : bool
{
  -2 < status && status <= 0 && status <= 1 && -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingFlag && -1 < stoppingFlag && stoppingFlag <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < status + stopped && status + stopped <= 0 && status + stopped <= 1 && -2 < status - stopped && status - stopped <= 0 && status - stopped <= 1 && -2 < status + stoppingFlag && -1 < status + stoppingFlag && status + stoppingFlag <= 1 && status - stoppingFlag <= 0 && status - stoppingFlag <= 1 && -2 < status + stoppingEvent && status + stoppingEvent <= 0 && status + stoppingEvent <= 1 && -2 < status - stoppingEvent && status - stoppingEvent <= 0 && status - stoppingEvent <= 1 && -2 < stopped + stoppingFlag && -1 < stopped + stoppingFlag && stopped + stoppingFlag <= 1 && -2 < stopped - stoppingFlag && stopped - stoppingFlag <= 0 && stopped - stoppingFlag <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1 && -2 < stoppingFlag + stoppingEvent && -1 < stoppingFlag + stoppingEvent && stoppingFlag + stoppingEvent <= 1 && -2 < stoppingFlag - stoppingEvent && -1 < stoppingFlag - stoppingEvent && stoppingFlag - stoppingEvent <= 1
}
function {:existential true} {:inline} Q2(stopped: int, stoppingEvent: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 0 && stopped <= 0 && -1 < stopped && stopped <= 1 && -2 < stoppingEvent && -1 < stoppingEvent && stoppingEvent <= 0 && stoppingEvent <= 0 && -1 < stoppingEvent && stoppingEvent <= 1 && -2 < stopped + stoppingEvent && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 0 && stopped + stoppingEvent <= 0 && -1 < stopped + stoppingEvent && stopped + stoppingEvent <= 1 && -2 < stopped - stoppingEvent && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 0 && stopped - stoppingEvent <= 0 && -1 < stopped - stoppingEvent && stopped - stoppingEvent <= 1
}
function {:existential true} {:inline} Q3(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q4(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q5(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
function {:existential true} {:inline} Q6(stopped: int) : bool
{
  -2 < stopped && -1 < stopped && stopped <= 1
}
verified

Boogie program verifier finished with 1 verified, 0 errors
